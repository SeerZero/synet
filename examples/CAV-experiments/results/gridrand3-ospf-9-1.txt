IN BOX ospf01
IN BOX ospf02-0
IN BOX ospf02-1
IN BOX fwd01-0
IN BOX fwd01-1
Couldn't import dot_parser, loading of dot files will not be possible.
Loading user provided input for box: ospf01 []
Checking initial inputs for box ospf01
Loading user provided outputs for box: ospf01 []
Loading user provided input for box: ospf02-0 []
Checking initial inputs for box ospf02-0
Loading user provided outputs for box: ospf02-0 []
Loading user provided input for box: ospf02-1 []
Checking initial inputs for box ospf02-1
Loading user provided outputs for box: ospf02-1 []
Loading user provided input for box: fwd01-0 [SetAdminDist(R11, 0, 1) == True, SetAdminDist(R11, 2, 2) == True, SetAdminDist(R11, 1, 3) == True, SetAdminDist(R12, 0, 1) == True, SetAdminDist(R12, 2, 2) == True, SetAdminDist(R12, 1, 3) == True, SetAdminDist(R13, 0, 1) == True, SetAdminDist(R13, 2, 2) == True, SetAdminDist(R13, 1, 3) == True, SetAdminDist(R21, 0, 1) == True, SetAdminDist(R21, 2, 2) == True, SetAdminDist(R21, 1, 3) == True, SetAdminDist(R22, 0, 1) == True, SetAdminDist(R22, 2, 2) == True, SetAdminDist(R22, 1, 3) == True, SetAdminDist(R23, 0, 1) == True, SetAdminDist(R23, 2, 2) == True, SetAdminDist(R23, 1, 3) == True, SetAdminDist(R31, 0, 1) == True, SetAdminDist(R31, 2, 2) == True, SetAdminDist(R31, 1, 3) == True, SetAdminDist(R32, 0, 1) == True, SetAdminDist(R32, 2, 2) == True, SetAdminDist(R32, 1, 3) == True, SetAdminDist(R33, 0, 1) == True, SetAdminDist(R33, 2, 2) == True, SetAdminDist(R33, 1, 3) == True]
Checking initial inputs for box fwd01-0
Loading user provided outputs for box: fwd01-0 []
HEY
Loading user provided input for box: fwd01-1 [SetAdminDist(R11, 0, 1) == True, SetAdminDist(R11, 2, 2) == True, SetAdminDist(R11, 1, 3) == True, SetAdminDist(R12, 0, 1) == True, SetAdminDist(R12, 2, 2) == True, SetAdminDist(R12, 1, 3) == True, SetAdminDist(R13, 0, 1) == True, SetAdminDist(R13, 2, 2) == True, SetAdminDist(R13, 1, 3) == True, SetAdminDist(R21, 0, 1) == True, SetAdminDist(R21, 2, 2) == True, SetAdminDist(R21, 1, 3) == True, SetAdminDist(R22, 0, 1) == True, SetAdminDist(R22, 2, 2) == True, SetAdminDist(R22, 1, 3) == True, SetAdminDist(R23, 0, 1) == True, SetAdminDist(R23, 2, 2) == True, SetAdminDist(R23, 1, 3) == True, SetAdminDist(R31, 0, 1) == True, SetAdminDist(R31, 2, 2) == True, SetAdminDist(R31, 1, 3) == True, SetAdminDist(R32, 0, 1) == True, SetAdminDist(R32, 2, 2) == True, SetAdminDist(R32, 1, 3) == True, SetAdminDist(R33, 0, 1) == True, SetAdminDist(R33, 2, 2) == True, SetAdminDist(R33, 1, 3) == True]
Checking initial inputs for box fwd01-1
Loading user provided outputs for box: fwd01-1 [Fwd(R13_N2, R12, R13, 1) == True, Fwd(R32_N5, R12, R22, 1) == True, Fwd(R31_N7, R12, R22, 1) == True, Fwd(R33_N8, R12, R13, 1) == True, Fwd(R22_N1, R12, R22, 1) == True, Fwd(R31_N3, R12, R22, 1) == True, Fwd(R33_N0, R12, R13, 1) == True, Fwd(R33_N6, R12, R13, 1) == True, Fwd(R12_N4, R13, R12, 1) == True, Fwd(R32_N5, R13, R23, 1) == True, Fwd(R31_N7, R13, R23, 1) == True, Fwd(R33_N8, R13, R23, 1) == True, Fwd(R22_N1, R13, R23, 1) == True, Fwd(R31_N3, R13, R23, 1) == True, Fwd(R33_N0, R13, R23, 1) == True, Fwd(R33_N6, R13, R23, 1) == True, Fwd(R12_N4, R11, R12, 1) == True, Fwd(R13_N2, R11, R12, 1) == True, Fwd(R32_N5, R11, R21, 1) == True, Fwd(R31_N7, R11, R21, 1) == True, Fwd(R33_N8, R11, R21, 1) == True, Fwd(R22_N1, R11, R21, 1) == True, Fwd(R31_N3, R11, R21, 1) == True, Fwd(R33_N0, R11, R21, 1) == True, Fwd(R33_N6, R11, R21, 1) == True, Fwd(R12_N4, R31, R21, 1) == True, Fwd(R13_N2, R31, R21, 1) == True, Fwd(R32_N5, R31, R32, 1) == True, Fwd(R33_N8, R31, R32, 1) == True, Fwd(R22_N1, R31, R21, 1) == True, Fwd(R33_N0, R31, R32, 1) == True, Fwd(R33_N6, R31, R32, 1) == True, Fwd(R12_N4, R32, R22, 1) == True, Fwd(R13_N2, R32, R22, 1) == True, Fwd(R31_N7, R32, R31, 1) == True, Fwd(R33_N8, R32, R33, 1) == True, Fwd(R22_N1, R32, R22, 1) == True, Fwd(R31_N3, R32, R31, 1) == True, Fwd(R33_N0, R32, R33, 1) == True, Fwd(R33_N6, R32, R33, 1) == True, Fwd(R12_N4, R33, R23, 1) == True, Fwd(R13_N2, R33, R23, 1) == True, Fwd(R32_N5, R33, R32, 1) == True, Fwd(R31_N7, R33, R32, 1) == True, Fwd(R22_N1, R33, R32, 1) == True, Fwd(R31_N3, R33, R32, 1) == True, Fwd(R12_N4, R23, R13, 1) == True, Fwd(R13_N2, R23, R13, 1) == True, Fwd(R32_N5, R23, R22, 1) == True, Fwd(R31_N7, R23, R22, 1) == True, Fwd(R33_N8, R23, R33, 1) == True, Fwd(R22_N1, R23, R22, 1) == True, Fwd(R31_N3, R23, R22, 1) == True, Fwd(R33_N0, R23, R33, 1) == True, Fwd(R33_N6, R23, R33, 0) == True, Fwd(R12_N4, R22, R12, 1) == True, Fwd(R13_N2, R22, R12, 1) == True, Fwd(R32_N5, R22, R32, 1) == True, Fwd(R31_N7, R22, R32, 1) == True, Fwd(R33_N8, R22, R23, 1) == True, Fwd(R31_N3, R22, R32, 1) == True, Fwd(R33_N0, R22, R23, 1) == True, Fwd(R33_N6, R22, R23, 0) == True, Fwd(R12_N4, R21, R22, 1) == True, Fwd(R13_N2, R21, R22, 1) == True, Fwd(R32_N5, R21, R22, 1) == True, Fwd(R31_N7, R21, R31, 1) == True, Fwd(R33_N8, R21, R22, 1) == True, Fwd(R22_N1, R21, R22, 1) == True, Fwd(R31_N3, R21, R31, 1) == True, Fwd(R33_N0, R21, R22, 1) == True, Fwd(R33_N6, R21, R22, 0) == True]

Beginning Synthesis...
##############################
Synthesizing for box 4 fwd01-1
Feeding desired outputs for fwd01-1...
Checking SAT for box fwd01-1 ...
SAT, reading inputs...
	Synthesized input SetAdminDist [[R11, 0, 1, True], [R11, 2, 2, True], [R11, 1, 3, True], [R12, 0, 1, True], [R12, 2, 2, True], [R12, 1, 3, True], [R13, 0, 1, True], [R13, 2, 2, True], [R13, 1, 3, True], [R21, 0, 1, True], [R21, 2, 2, True], [R21, 1, 3, True], [R22, 0, 1, True], [R22, 2, 2, True], [R22, 1, 3, True], [R23, 0, 1, True], [R23, 2, 2, True], [R23, 1, 3, True], [R31, 0, 1, True], [R31, 2, 2, True], [R31, 1, 3, True], [R32, 0, 1, True], [R32, 2, 2, True], [R32, 1, 3, True], [R33, 0, 1, True], [R33, 2, 2, True], [R33, 1, 3, True], 'False']
	Synthesized input Route [[R13_N2, R12, R13, 1, True], [R32_N5, R12, R22, 1, True], [R31_N7, R12, R22, 1, True], [R33_N8, R12, R13, 1, True], [R22_N1, R12, R22, 1, True], [R31_N3, R12, R22, 1, True], [R33_N0, R12, R13, 1, True], [R33_N6, R12, R13, 1, True], [R12_N4, R13, R12, 1, True], [R32_N5, R13, R23, 1, True], [R31_N7, R13, R23, 1, True], [R33_N8, R13, R23, 1, True], [R22_N1, R13, R23, 1, True], [R31_N3, R13, R23, 1, True], [R33_N0, R13, R23, 1, True], [R33_N6, R13, R23, 1, True], [R12_N4, R11, R12, 1, True], [R13_N2, R11, R12, 1, True], [R32_N5, R11, R21, 1, True], [R31_N7, R11, R21, 1, True], [R33_N8, R11, R21, 1, True], [R22_N1, R11, R21, 1, True], [R31_N3, R11, R21, 1, True], [R33_N0, R11, R21, 1, True], [R33_N6, R11, R21, 1, True], [R12_N4, R31, R21, 1, True], [R13_N2, R31, R21, 1, True], [R32_N5, R31, R32, 1, True], [R33_N8, R31, R32, 1, True], [R22_N1, R31, R21, 1, True], [R33_N0, R31, R32, 1, True], [R33_N6, R31, R32, 1, True], [R12_N4, R32, R22, 1, True], [R13_N2, R32, R22, 1, True], [R31_N7, R32, R31, 1, True], [R33_N8, R32, R33, 1, True], [R22_N1, R32, R22, 1, True], [R31_N3, R32, R31, 1, True], [R33_N0, R32, R33, 1, True], [R33_N6, R32, R33, 1, True], [R12_N4, R33, R23, 1, True], [R13_N2, R33, R23, 1, True], [R32_N5, R33, R32, 1, True], [R31_N7, R33, R32, 1, True], [R22_N1, R33, R32, 1, True], [R31_N3, R33, R32, 1, True], [R12_N4, R23, R13, 1, True], [R13_N2, R23, R13, 1, True], [R32_N5, R23, R22, 1, True], [R31_N7, R23, R22, 1, True], [R33_N8, R23, R33, 1, True], [R22_N1, R23, R22, 1, True], [R31_N3, R23, R22, 1, True], [R33_N0, R23, R33, 1, True], [R33_N6, R23, R33, 0, True], [R12_N4, R22, R12, 1, True], [R13_N2, R22, R12, 1, True], [R32_N5, R22, R32, 1, True], [R31_N7, R22, R32, 1, True], [R33_N8, R22, R23, 1, True], [R31_N3, R22, R32, 1, True], [R33_N0, R22, R23, 1, True], [R33_N6, R22, R23, 0, True], [R12_N4, R21, R22, 1, True], [R13_N2, R21, R22, 1, True], [R32_N5, R21, R22, 1, True], [R31_N7, R21, R31, 1, True], [R33_N8, R21, R22, 1, True], [R22_N1, R21, R22, 1, True], [R31_N3, R21, R31, 1, True], [R33_N0, R21, R22, 1, True], [R33_N6, R21, R22, 0, True], [R33_N6, R23, R33, 1, True], [R33_N6, R22, R23, 1, True], [R33_N6, R21, R22, 1, True], 'False']
	Synthesized input nonMinCostAD [[R33_N6, R21, 3, True], [R33_N6, R23, 3, True], [R33_N6, R22, 3, True], [R33_N6, R23, 2, True], [R33_N6, R22, 2, True], [R33_N6, R21, 2, True], 'False']
##############################
Synthesizing for box 3 fwd01-0
Feeding desired outputs for fwd01-0...
	Feeding desired output fwd01-0 [Route(R13_N2, R12, R13, 1) == True, Route(R32_N5, R12, R22, 1) == True, Route(R31_N7, R12, R22, 1) == True, Route(R33_N8, R12, R13, 1) == True, Route(R22_N1, R12, R22, 1) == True, Route(R31_N3, R12, R22, 1) == True, Route(R33_N0, R12, R13, 1) == True, Route(R33_N6, R12, R13, 1) == True, Route(R12_N4, R13, R12, 1) == True, Route(R32_N5, R13, R23, 1) == True, Route(R31_N7, R13, R23, 1) == True, Route(R33_N8, R13, R23, 1) == True, Route(R22_N1, R13, R23, 1) == True, Route(R31_N3, R13, R23, 1) == True, Route(R33_N0, R13, R23, 1) == True, Route(R33_N6, R13, R23, 1) == True, Route(R12_N4, R11, R12, 1) == True, Route(R13_N2, R11, R12, 1) == True, Route(R32_N5, R11, R21, 1) == True, Route(R31_N7, R11, R21, 1) == True, Route(R33_N8, R11, R21, 1) == True, Route(R22_N1, R11, R21, 1) == True, Route(R31_N3, R11, R21, 1) == True, Route(R33_N0, R11, R21, 1) == True, Route(R33_N6, R11, R21, 1) == True, Route(R12_N4, R31, R21, 1) == True, Route(R13_N2, R31, R21, 1) == True, Route(R32_N5, R31, R32, 1) == True, Route(R33_N8, R31, R32, 1) == True, Route(R22_N1, R31, R21, 1) == True, Route(R33_N0, R31, R32, 1) == True, Route(R33_N6, R31, R32, 1) == True, Route(R12_N4, R32, R22, 1) == True, Route(R13_N2, R32, R22, 1) == True, Route(R31_N7, R32, R31, 1) == True, Route(R33_N8, R32, R33, 1) == True, Route(R22_N1, R32, R22, 1) == True, Route(R31_N3, R32, R31, 1) == True, Route(R33_N0, R32, R33, 1) == True, Route(R33_N6, R32, R33, 1) == True, Route(R12_N4, R33, R23, 1) == True, Route(R13_N2, R33, R23, 1) == True, Route(R32_N5, R33, R32, 1) == True, Route(R31_N7, R33, R32, 1) == True, Route(R22_N1, R33, R32, 1) == True, Route(R31_N3, R33, R32, 1) == True, Route(R12_N4, R23, R13, 1) == True, Route(R13_N2, R23, R13, 1) == True, Route(R32_N5, R23, R22, 1) == True, Route(R31_N7, R23, R22, 1) == True, Route(R33_N8, R23, R33, 1) == True, Route(R22_N1, R23, R22, 1) == True, Route(R31_N3, R23, R22, 1) == True, Route(R33_N0, R23, R33, 1) == True, Route(R33_N6, R23, R33, 0) == True, Route(R12_N4, R22, R12, 1) == True, Route(R13_N2, R22, R12, 1) == True, Route(R32_N5, R22, R32, 1) == True, Route(R31_N7, R22, R32, 1) == True, Route(R33_N8, R22, R23, 1) == True, Route(R31_N3, R22, R32, 1) == True, Route(R33_N0, R22, R23, 1) == True, Route(R33_N6, R22, R23, 0) == True, Route(R12_N4, R21, R22, 1) == True, Route(R13_N2, R21, R22, 1) == True, Route(R32_N5, R21, R22, 1) == True, Route(R31_N7, R21, R31, 1) == True, Route(R33_N8, R21, R22, 1) == True, Route(R22_N1, R21, R22, 1) == True, Route(R31_N3, R21, R31, 1) == True, Route(R33_N0, R21, R22, 1) == True, Route(R33_N6, R21, R22, 0) == True, Route(R33_N6, R23, R33, 1) == True, Route(R33_N6, R22, R23, 1) == True, Route(R33_N6, R21, R22, 1) == True, ForAll([t0, t1, t2, t3],
       Implies(Not(Or(And(t0 == R13_N2,
                          t1 == R12,
                          t2 == R13,
                          t3 == 1),
                      And(t0 == R32_N5,
                          t1 == R12,
                          t2 == R22,
                          t3 == 1),
                      And(t0 == R31_N7,
                          t1 == R12,
                          t2 == R22,
                          t3 == 1),
                      And(t0 == R33_N8,
                          t1 == R12,
                          t2 == R13,
                          t3 == 1),
                      And(t0 == R22_N1,
                          t1 == R12,
                          t2 == R22,
                          t3 == 1),
                      And(t0 == R31_N3,
                          t1 == R12,
                          t2 == R22,
                          t3 == 1),
                      And(t0 == R33_N0,
                          t1 == R12,
                          t2 == R13,
                          t3 == 1),
                      And(t0 == R33_N6,
                          t1 == R12,
                          t2 == R13,
                          t3 == 1),
                      And(t0 == R12_N4,
                          t1 == R13,
                          t2 == R12,
                          t3 == 1),
                      And(t0 == R32_N5,
                          t1 == R13,
                          t2 == R23,
                          t3 == 1),
                      And(t0 == R31_N7,
                          t1 == R13,
                          t2 == R23,
                          t3 == 1),
                      And(t0 == R33_N8,
                          t1 == R13,
                          t2 == R23,
                          t3 == 1),
                      And(t0 == R22_N1,
                          t1 == R13,
                          t2 == R23,
                          t3 == 1),
                      And(t0 == R31_N3,
                          t1 == R13,
                          t2 == R23,
                          t3 == 1),
                      And(t0 == R33_N0,
                          t1 == R13,
                          t2 == R23,
                          t3 == 1),
                      And(t0 == R33_N6,
                          t1 == R13,
                          t2 == R23,
                          t3 == 1),
                      And(t0 == R12_N4,
                          t1 == R11,
                          t2 == R12,
                          t3 == 1),
                      And(t0 == R13_N2,
                          t1 == R11,
                          t2 == R12,
                          t3 == 1),
                      And(t0 == R32_N5,
                          t1 == R11,
                          t2 == R21,
                          t3 == 1),
                      And(t0 == R31_N7,
                          t1 == R11,
                          t2 == R21,
                          t3 == 1),
                      And(t0 == R33_N8,
                          t1 == R11,
                          t2 == R21,
                          t3 == 1),
                      And(t0 == R22_N1,
                          t1 == R11,
                          t2 == R21,
                          t3 == 1),
                      And(t0 == R31_N3,
                          t1 == R11,
                          t2 == R21,
                          t3 == 1),
                      And(t0 == R33_N0,
                          t1 == R11,
                          t2 == R21,
                          t3 == 1),
                      And(t0 == R33_N6,
                          t1 == R11,
                          t2 == R21,
                          t3 == 1),
                      And(t0 == R12_N4,
                          t1 == R31,
                          t2 == R21,
                          t3 == 1),
                      And(t0 == R13_N2,
                          t1 == R31,
                          t2 == R21,
                          t3 == 1),
                      And(t0 == R32_N5,
                          t1 == R31,
                          t2 == R32,
                          t3 == 1),
                      And(t0 == R33_N8,
                          t1 == R31,
                          t2 == R32,
                          t3 == 1),
                      And(t0 == R22_N1,
                          t1 == R31,
                          t2 == R21,
                          t3 == 1),
                      And(t0 == R33_N0,
                          t1 == R31,
                          t2 == R32,
                          t3 == 1),
                      And(t0 == R33_N6,
                          t1 == R31,
                          t2 == R32,
                          t3 == 1),
                      And(t0 == R12_N4,
                          t1 == R32,
                          t2 == R22,
                          t3 == 1),
                      And(t0 == R13_N2,
                          t1 == R32,
                          t2 == R22,
                          t3 == 1),
                      And(t0 == R31_N7,
                          t1 == R32,
                          t2 == R31,
                          t3 == 1),
                      And(t0 == R33_N8,
                          t1 == R32,
                          t2 == R33,
                          t3 == 1),
                      And(t0 == R22_N1,
                          t1 == R32,
                          t2 == R22,
                          t3 == 1),
                      And(t0 == R31_N3,
                          t1 == R32,
                          t2 == R31,
                          t3 == 1),
                      And(t0 == R33_N0,
                          t1 == R32,
                          t2 == R33,
                          t3 == 1),
                      And(t0 == R33_N6,
                          t1 == R32,
                          t2 == R33,
                          t3 == 1),
                      And(t0 == R12_N4,
                          t1 == R33,
                          t2 == R23,
                          t3 == 1),
                      And(t0 == R13_N2,
                          t1 == R33,
                          t2 == R23,
                          t3 == 1),
                      And(t0 == R32_N5,
                          t1 == R33,
                          t2 == R32,
                          t3 == 1),
                      And(t0 == R31_N7,
                          t1 == R33,
                          t2 == R32,
                          t3 == 1),
                      And(t0 == R22_N1,
                          t1 == R33,
                          t2 == R32,
                          t3 == 1),
                      And(t0 == R31_N3,
                          t1 == R33,
                          t2 == R32,
                          t3 == 1),
                      And(t0 == R12_N4,
                          t1 == R23,
                          t2 == R13,
                          t3 == 1),
                      And(t0 == R13_N2,
                          t1 == R23,
                          t2 == R13,
                          t3 == 1),
                      And(t0 == R32_N5,
                          t1 == R23,
                          t2 == R22,
                          t3 == 1),
                      And(t0 == R31_N7,
                          t1 == R23,
                          t2 == R22,
...]
	Feeding desired output fwd01-0 [nonMinCostAD(R33_N6, R21, 3) == True, nonMinCostAD(R33_N6, R23, 3) == True, nonMinCostAD(R33_N6, R22, 3) == True, nonMinCostAD(R33_N6, R23, 2) == True, nonMinCostAD(R33_N6, R22, 2) == True, nonMinCostAD(R33_N6, R21, 2) == True, ForAll([t0, t1, t2],
       Implies(Not(Or(And(t0 == R33_N6, t1 == R21, t2 == 3),
                      And(t0 == R33_N6, t1 == R23, t2 == 3),
                      And(t0 == R33_N6, t1 == R22, t2 == 3),
                      And(t0 == R33_N6, t1 == R23, t2 == 2),
                      And(t0 == R33_N6, t1 == R22, t2 == 2),
                      And(t0 == R33_N6, t1 == R21, t2 == 2))),
               nonMinCostAD(t0, t1, t2) == False))]
	Feeding shortcut INPUT fwd01-0 [SetAdminDist(R11, 0, 1) == True, SetAdminDist(R11, 2, 2) == True, SetAdminDist(R11, 1, 3) == True, SetAdminDist(R12, 0, 1) == True, SetAdminDist(R12, 2, 2) == True, SetAdminDist(R12, 1, 3) == True, SetAdminDist(R13, 0, 1) == True, SetAdminDist(R13, 2, 2) == True, SetAdminDist(R13, 1, 3) == True, SetAdminDist(R21, 0, 1) == True, SetAdminDist(R21, 2, 2) == True, SetAdminDist(R21, 1, 3) == True, SetAdminDist(R22, 0, 1) == True, SetAdminDist(R22, 2, 2) == True, SetAdminDist(R22, 1, 3) == True, SetAdminDist(R23, 0, 1) == True, SetAdminDist(R23, 2, 2) == True, SetAdminDist(R23, 1, 3) == True, SetAdminDist(R31, 0, 1) == True, SetAdminDist(R31, 2, 2) == True, SetAdminDist(R31, 1, 3) == True, SetAdminDist(R32, 0, 1) == True, SetAdminDist(R32, 2, 2) == True, SetAdminDist(R32, 1, 3) == True, SetAdminDist(R33, 0, 1) == True, SetAdminDist(R33, 2, 2) == True, SetAdminDist(R33, 1, 3) == True, ForAll([t0, t1, t2],
       Implies(Not(Or(And(t0 == R11, t1 == 0, t2 == 1),
                      And(t0 == R11, t1 == 2, t2 == 2),
                      And(t0 == R11, t1 == 1, t2 == 3),
                      And(t0 == R12, t1 == 0, t2 == 1),
                      And(t0 == R12, t1 == 2, t2 == 2),
                      And(t0 == R12, t1 == 1, t2 == 3),
                      And(t0 == R13, t1 == 0, t2 == 1),
                      And(t0 == R13, t1 == 2, t2 == 2),
                      And(t0 == R13, t1 == 1, t2 == 3),
                      And(t0 == R21, t1 == 0, t2 == 1),
                      And(t0 == R21, t1 == 2, t2 == 2),
                      And(t0 == R21, t1 == 1, t2 == 3),
                      And(t0 == R22, t1 == 0, t2 == 1),
                      And(t0 == R22, t1 == 2, t2 == 2),
                      And(t0 == R22, t1 == 1, t2 == 3),
                      And(t0 == R23, t1 == 0, t2 == 1),
                      And(t0 == R23, t1 == 2, t2 == 2),
                      And(t0 == R23, t1 == 1, t2 == 3),
                      And(t0 == R31, t1 == 0, t2 == 1),
                      And(t0 == R31, t1 == 2, t2 == 2),
                      And(t0 == R31, t1 == 1, t2 == 3),
                      And(t0 == R32, t1 == 0, t2 == 1),
                      And(t0 == R32, t1 == 2, t2 == 2),
                      And(t0 == R32, t1 == 1, t2 == 3),
                      And(t0 == R33, t1 == 0, t2 == 1),
                      And(t0 == R33, t1 == 2, t2 == 2),
                      And(t0 == R33, t1 == 1, t2 == 3))),
               SetAdminDist(t0, t1, t2) == False))]
Checking SAT for box fwd01-0 ...
SAT, reading inputs...
	Synthesized input MinIGPBGPRoute ['False']
	Synthesized input SetAdminDist [[R11, 0, 1, True], [R11, 2, 2, True], [R11, 1, 3, True], [R12, 0, 1, True], [R12, 2, 2, True], [R12, 1, 3, True], [R13, 0, 1, True], [R13, 2, 2, True], [R13, 1, 3, True], [R21, 0, 1, True], [R21, 2, 2, True], [R21, 1, 3, True], [R22, 0, 1, True], [R22, 2, 2, True], [R22, 1, 3, True], [R23, 0, 1, True], [R23, 2, 2, True], [R23, 1, 3, True], [R31, 0, 1, True], [R31, 2, 2, True], [R31, 1, 3, True], [R32, 0, 1, True], [R32, 2, 2, True], [R32, 1, 3, True], [R33, 0, 1, True], [R33, 2, 2, True], [R33, 1, 3, True], 'False']
	Synthesized input SetStaticRoute [[R33_N6, R23, R33, True], [R33_N6, R22, R23, True], [R33_N6, R21, R22, True], 'False']
	Synthesized input BestOSPFRoute [[R13_N2, R12, R13, 2, True], [R32_N5, R12, R22, 10, True], [R31_N7, R12, R22, 17, True], [R33_N8, R12, R13, 6, True], [R22_N1, R12, R22, 4, True], [R31_N3, R12, R22, 17, True], [R33_N0, R12, R13, 6, True], [R33_N6, R12, R13, 6, True], [R12_N4, R13, R12, 1, True], [R32_N5, R13, R23, 9, True], [R31_N7, R13, R23, 16, True], [R33_N8, R13, R23, 4, True], [R22_N1, R13, R23, 3, True], [R31_N3, R13, R23, 16, True], [R33_N0, R13, R23, 4, True], [R33_N6, R13, R23, 4, True], [R12_N4, R11, R12, 7, True], [R13_N2, R11, R12, 9, True], [R32_N5, R11, R21, 14, True], [R31_N7, R11, R21, 16, True], [R33_N8, R11, R21, 12, True], [R22_N1, R11, R21, 8, True], [R31_N3, R11, R21, 16, True], [R33_N0, R11, R21, 12, True], [R33_N6, R11, R21, 12, True], [R12_N4, R31, R21, 11, True], [R13_N2, R31, R21, 13, True], [R32_N5, R31, R32, 2, True], [R33_N8, R31, R32, 7, True], [R22_N1, R31, R21, 8, True], [R33_N0, R31, R32, 7, True], [R33_N6, R31, R32, 7, True], [R12_N4, R32, R22, 4, True], [R13_N2, R32, R22, 6, True], [R31_N7, R32, R31, 7, True], [R33_N8, R32, R33, 5, True], [R22_N1, R32, R22, 1, True], [R31_N3, R32, R31, 7, True], [R33_N0, R32, R33, 5, True], [R33_N6, R32, R33, 5, True], [R12_N4, R33, R23, 17, True], [R13_N2, R33, R23, 16, True], [R32_N5, R33, R32, 6, True], [R31_N7, R33, R32, 13, True], [R22_N1, R33, R32, 7, True], [R31_N3, R33, R32, 13, True], [R12_N4, R23, R13, 2, True], [R13_N2, R23, R13, 1, True], [R32_N5, R23, R22, 8, True], [R31_N7, R23, R22, 15, True], [R33_N8, R23, R33, 3, True], [R22_N1, R23, R22, 2, True], [R31_N3, R23, R22, 15, True], [R33_N0, R23, R33, 3, True], [R12_N4, R22, R12, 3, True], [R13_N2, R22, R12, 5, True], [R32_N5, R22, R32, 6, True], [R31_N7, R22, R32, 13, True], [R33_N8, R22, R23, 4, True], [R31_N3, R22, R32, 13, True], [R33_N0, R22, R23, 4, True], [R12_N4, R21, R22, 4, True], [R13_N2, R21, R22, 6, True], [R32_N5, R21, R22, 7, True], [R31_N7, R21, R31, 9, True], [R33_N8, R21, R22, 5, True], [R22_N1, R21, R22, 1, True], [R31_N3, R21, R31, 9, True], [R33_N0, R21, R22, 5, True], [R33_N6, R23, R33, 3, True], [R33_N6, R22, R23, 4, True], [R33_N6, R21, R22, 5, True], 'False']
##############################
Synthesizing for box 2 ospf02-1
Feeding desired outputs for ospf02-1...
	Feeding desired output ospf02-1 [BestOSPFRoute(R13_N2, R12, R13, 2) == True, BestOSPFRoute(R32_N5, R12, R22, 10) == True, BestOSPFRoute(R31_N7, R12, R22, 17) == True, BestOSPFRoute(R33_N8, R12, R13, 6) == True, BestOSPFRoute(R22_N1, R12, R22, 4) == True, BestOSPFRoute(R31_N3, R12, R22, 17) == True, BestOSPFRoute(R33_N0, R12, R13, 6) == True, BestOSPFRoute(R33_N6, R12, R13, 6) == True, BestOSPFRoute(R12_N4, R13, R12, 1) == True, BestOSPFRoute(R32_N5, R13, R23, 9) == True, BestOSPFRoute(R31_N7, R13, R23, 16) == True, BestOSPFRoute(R33_N8, R13, R23, 4) == True, BestOSPFRoute(R22_N1, R13, R23, 3) == True, BestOSPFRoute(R31_N3, R13, R23, 16) == True, BestOSPFRoute(R33_N0, R13, R23, 4) == True, BestOSPFRoute(R33_N6, R13, R23, 4) == True, BestOSPFRoute(R12_N4, R11, R12, 7) == True, BestOSPFRoute(R13_N2, R11, R12, 9) == True, BestOSPFRoute(R32_N5, R11, R21, 14) == True, BestOSPFRoute(R31_N7, R11, R21, 16) == True, BestOSPFRoute(R33_N8, R11, R21, 12) == True, BestOSPFRoute(R22_N1, R11, R21, 8) == True, BestOSPFRoute(R31_N3, R11, R21, 16) == True, BestOSPFRoute(R33_N0, R11, R21, 12) == True, BestOSPFRoute(R33_N6, R11, R21, 12) == True, BestOSPFRoute(R12_N4, R31, R21, 11) == True, BestOSPFRoute(R13_N2, R31, R21, 13) == True, BestOSPFRoute(R32_N5, R31, R32, 2) == True, BestOSPFRoute(R33_N8, R31, R32, 7) == True, BestOSPFRoute(R22_N1, R31, R21, 8) == True, BestOSPFRoute(R33_N0, R31, R32, 7) == True, BestOSPFRoute(R33_N6, R31, R32, 7) == True, BestOSPFRoute(R12_N4, R32, R22, 4) == True, BestOSPFRoute(R13_N2, R32, R22, 6) == True, BestOSPFRoute(R31_N7, R32, R31, 7) == True, BestOSPFRoute(R33_N8, R32, R33, 5) == True, BestOSPFRoute(R22_N1, R32, R22, 1) == True, BestOSPFRoute(R31_N3, R32, R31, 7) == True, BestOSPFRoute(R33_N0, R32, R33, 5) == True, BestOSPFRoute(R33_N6, R32, R33, 5) == True, BestOSPFRoute(R12_N4, R33, R23, 17) == True, BestOSPFRoute(R13_N2, R33, R23, 16) == True, BestOSPFRoute(R32_N5, R33, R32, 6) == True, BestOSPFRoute(R31_N7, R33, R32, 13) == True, BestOSPFRoute(R22_N1, R33, R32, 7) == True, BestOSPFRoute(R31_N3, R33, R32, 13) == True, BestOSPFRoute(R12_N4, R23, R13, 2) == True, BestOSPFRoute(R13_N2, R23, R13, 1) == True, BestOSPFRoute(R32_N5, R23, R22, 8) == True, BestOSPFRoute(R31_N7, R23, R22, 15) == True, BestOSPFRoute(R33_N8, R23, R33, 3) == True, BestOSPFRoute(R22_N1, R23, R22, 2) == True, BestOSPFRoute(R31_N3, R23, R22, 15) == True, BestOSPFRoute(R33_N0, R23, R33, 3) == True, BestOSPFRoute(R12_N4, R22, R12, 3) == True, BestOSPFRoute(R13_N2, R22, R12, 5) == True, BestOSPFRoute(R32_N5, R22, R32, 6) == True, BestOSPFRoute(R31_N7, R22, R32, 13) == True, BestOSPFRoute(R33_N8, R22, R23, 4) == True, BestOSPFRoute(R31_N3, R22, R32, 13) == True, BestOSPFRoute(R33_N0, R22, R23, 4) == True, BestOSPFRoute(R12_N4, R21, R22, 4) == True, BestOSPFRoute(R13_N2, R21, R22, 6) == True, BestOSPFRoute(R32_N5, R21, R22, 7) == True, BestOSPFRoute(R31_N7, R21, R31, 9) == True, BestOSPFRoute(R33_N8, R21, R22, 5) == True, BestOSPFRoute(R22_N1, R21, R22, 1) == True, BestOSPFRoute(R31_N3, R21, R31, 9) == True, BestOSPFRoute(R33_N0, R21, R22, 5) == True, BestOSPFRoute(R33_N6, R23, R33, 3) == True, BestOSPFRoute(R33_N6, R22, R23, 4) == True, BestOSPFRoute(R33_N6, R21, R22, 5) == True, ForAll([t0, t1, t2, t3],
       Implies(Not(Or(And(t0 == R13_N2,
                          t1 == R12,
                          t2 == R13,
                          t3 == 2),
                      And(t0 == R32_N5,
                          t1 == R12,
                          t2 == R22,
                          t3 == 10),
                      And(t0 == R31_N7,
                          t1 == R12,
                          t2 == R22,
                          t3 == 17),
                      And(t0 == R33_N8,
                          t1 == R12,
                          t2 == R13,
                          t3 == 6),
                      And(t0 == R22_N1,
                          t1 == R12,
                          t2 == R22,
                          t3 == 4),
                      And(t0 == R31_N3,
                          t1 == R12,
                          t2 == R22,
                          t3 == 17),
                      And(t0 == R33_N0,
                          t1 == R12,
                          t2 == R13,
                          t3 == 6),
                      And(t0 == R33_N6,
                          t1 == R12,
                          t2 == R13,
                          t3 == 6),
                      And(t0 == R12_N4,
                          t1 == R13,
                          t2 == R12,
                          t3 == 1),
                      And(t0 == R32_N5,
                          t1 == R13,
                          t2 == R23,
                          t3 == 9),
                      And(t0 == R31_N7,
                          t1 == R13,
                          t2 == R23,
                          t3 == 16),
                      And(t0 == R33_N8,
                          t1 == R13,
                          t2 == R23,
                          t3 == 4),
                      And(t0 == R22_N1,
                          t1 == R13,
                          t2 == R23,
                          t3 == 3),
                      And(t0 == R31_N3,
                          t1 == R13,
                          t2 == R23,
                          t3 == 16),
                      And(t0 == R33_N0,
                          t1 == R13,
                          t2 == R23,
                          t3 == 4),
                      And(t0 == R33_N6,
                          t1 == R13,
                          t2 == R23,
                          t3 == 4),
                      And(t0 == R12_N4,
                          t1 == R11,
                          t2 == R12,
                          t3 == 7),
                      And(t0 == R13_N2,
                          t1 == R11,
                          t2 == R12,
                          t3 == 9),
                      And(t0 == R32_N5,
                          t1 == R11,
                          t2 == R21,
                          t3 == 14),
                      And(t0 == R31_N7,
                          t1 == R11,
                          t2 == R21,
                          t3 == 16),
                      And(t0 == R33_N8,
                          t1 == R11,
                          t2 == R21,
                          t3 == 12),
                      And(t0 == R22_N1,
                          t1 == R11,
                          t2 == R21,
                          t3 == 8),
                      And(t0 == R31_N3,
                          t1 == R11,
                          t2 == R21,
                          t3 == 16),
                      And(t0 == R33_N0,
                          t1 == R11,
                          t2 == R21,
                          t3 == 12),
                      And(t0 == R33_N6,
                          t1 == R11,
                          t2 == R21,
                          t3 == 12),
                      And(t0 == R12_N4,
                          t1 == R31,
                          t2 == R21,
                          t3 == 11),
                      And(t0 == R13_N2,
                          t1 == R31,
                          t2 == R21,
                          t3 == 13),
                      And(t0 == R32_N5,
                          t1 == R31,
                          t2 == R32,
                          t3 == 2),
                      And(t0 == R33_N8,
                          t1 == R31,
                          t2 == R32,
                          t3 == 7),
                      And(t0 == R22_N1,
                          t1 == R31,
                          t2 == R21,
                          t3 == 8),
                      And(t0 == R33_N0,
                          t1 == R31,
                          t2 == R32,
                          t3 == 7),
                      And(t0 == R33_N6,
                          t1 == R31,
                          t2 == R32,
                          t3 == 7),
                      And(t0 == R12_N4,
                          t1 == R32,
                          t2 == R22,
                          t3 == 4),
                      And(t0 == R13_N2,
                          t1 == R32,
                          t2 == R22,
                          t3 == 6),
                      And(t0 == R31_N7,
                          t1 == R32,
                          t2 == R31,
                          t3 == 7),
                      And(t0 == R33_N8,
                          t1 == R32,
                          t2 == R33,
                          t3 == 5),
                      And(t0 == R22_N1,
                          t1 == R32,
                          t2 == R22,
                          t3 == 1),
                      And(t0 == R31_N3,
                          t1 == R32,
                          t2 == R31,
                          t3 == 7),
                      And(t0 == R33_N0,
                          t1 == R32,
                          t2 == R33,
                          t3 == 5),
                      And(t0 == R33_N6,
                          t1 == R32,
                          t2 == R33,
                          t3 == 5),
                      And(t0 == R12_N4,
                          t1 == R33,
                          t2 == R23,
                          t3 == 17),
                      And(t0 == R13_N2,
                          t1 == R33,
                          t2 == R23,
                          t3 == 16),
                      And(t0 == R32_N5,
                          t1 == R33,
                          t2 == R32,
                          t3 == 6),
                      And(t0 == R31_N7,
                          t1 == R33,
                          t2 == R32,
                          t3 == 13),
                      And(t0 == R22_N1,
                          t1 == R33,
                          t2 == R32,
                          t3 == 7),
                      And(t0 == R31_N3,
                          t1 == R33,
                          t2 == R32,
                          t3 == 13),
                      And(t0 == R12_N4,
                          t1 == R23,
                          t2 == R13,
                          t3 == 2),
                      And(t0 == R13_N2,
                          t1 == R23,
                          t2 == R13,
                          t3 == 1),
                      And(t0 == R32_N5,
                          t1 == R23,
                          t2 == R22,
                          t3 == 8),
                      And(t0 == R31_N7,
                          t1 == R23,
                          t2 == R22,
...]
Checking SAT for box ospf02-1 ...
SAT, reading inputs...
	Synthesized input nonMinOSPFRouteCost ['False']
	Synthesized input OSPFRoute [[R13_N2, R12, R13, 2, True], [R32_N5, R12, R22, 10, True], [R31_N7, R12, R22, 17, True], [R33_N8, R12, R13, 6, True], [R22_N1, R12, R22, 4, True], [R31_N3, R12, R22, 17, True], [R33_N0, R12, R13, 6, True], [R33_N6, R12, R13, 6, True], [R12_N4, R13, R12, 1, True], [R32_N5, R13, R23, 9, True], [R31_N7, R13, R23, 16, True], [R33_N8, R13, R23, 4, True], [R22_N1, R13, R23, 3, True], [R31_N3, R13, R23, 16, True], [R33_N0, R13, R23, 4, True], [R33_N6, R13, R23, 4, True], [R12_N4, R11, R12, 7, True], [R13_N2, R11, R12, 9, True], [R32_N5, R11, R21, 14, True], [R31_N7, R11, R21, 16, True], [R33_N8, R11, R21, 12, True], [R22_N1, R11, R21, 8, True], [R31_N3, R11, R21, 16, True], [R33_N0, R11, R21, 12, True], [R33_N6, R11, R21, 12, True], [R12_N4, R31, R21, 11, True], [R13_N2, R31, R21, 13, True], [R32_N5, R31, R32, 2, True], [R33_N8, R31, R32, 7, True], [R22_N1, R31, R21, 8, True], [R33_N0, R31, R32, 7, True], [R33_N6, R31, R32, 7, True], [R12_N4, R32, R22, 4, True], [R13_N2, R32, R22, 6, True], [R31_N7, R32, R31, 7, True], [R33_N8, R32, R33, 5, True], [R22_N1, R32, R22, 1, True], [R31_N3, R32, R31, 7, True], [R33_N0, R32, R33, 5, True], [R33_N6, R32, R33, 5, True], [R12_N4, R33, R23, 17, True], [R13_N2, R33, R23, 16, True], [R32_N5, R33, R32, 6, True], [R31_N7, R33, R32, 13, True], [R22_N1, R33, R32, 7, True], [R31_N3, R33, R32, 13, True], [R12_N4, R23, R13, 2, True], [R13_N2, R23, R13, 1, True], [R32_N5, R23, R22, 8, True], [R31_N7, R23, R22, 15, True], [R33_N8, R23, R33, 3, True], [R22_N1, R23, R22, 2, True], [R31_N3, R23, R22, 15, True], [R33_N0, R23, R33, 3, True], [R12_N4, R22, R12, 3, True], [R13_N2, R22, R12, 5, True], [R32_N5, R22, R32, 6, True], [R31_N7, R22, R32, 13, True], [R33_N8, R22, R23, 4, True], [R31_N3, R22, R32, 13, True], [R33_N0, R22, R23, 4, True], [R12_N4, R21, R22, 4, True], [R13_N2, R21, R22, 6, True], [R32_N5, R21, R22, 7, True], [R31_N7, R21, R31, 9, True], [R33_N8, R21, R22, 5, True], [R22_N1, R21, R22, 1, True], [R31_N3, R21, R31, 9, True], [R33_N0, R21, R22, 5, True], [R33_N6, R23, R33, 3, True], [R33_N6, R22, R23, 4, True], [R33_N6, R21, R22, 5, True], 'False']
##############################
Synthesizing for box 1 ospf02-0
Feeding desired outputs for ospf02-0...
	Feeding desired output ospf02-0 [ForAll([t0, t1, t2],
       nonMinOSPFRouteCost(t0, t1, t2) == False)]
	Feeding shortcut INPUT ospf02-0 [OSPFRoute(R13_N2, R12, R13, 2) == True, OSPFRoute(R32_N5, R12, R22, 10) == True, OSPFRoute(R31_N7, R12, R22, 17) == True, OSPFRoute(R33_N8, R12, R13, 6) == True, OSPFRoute(R22_N1, R12, R22, 4) == True, OSPFRoute(R31_N3, R12, R22, 17) == True, OSPFRoute(R33_N0, R12, R13, 6) == True, OSPFRoute(R33_N6, R12, R13, 6) == True, OSPFRoute(R12_N4, R13, R12, 1) == True, OSPFRoute(R32_N5, R13, R23, 9) == True, OSPFRoute(R31_N7, R13, R23, 16) == True, OSPFRoute(R33_N8, R13, R23, 4) == True, OSPFRoute(R22_N1, R13, R23, 3) == True, OSPFRoute(R31_N3, R13, R23, 16) == True, OSPFRoute(R33_N0, R13, R23, 4) == True, OSPFRoute(R33_N6, R13, R23, 4) == True, OSPFRoute(R12_N4, R11, R12, 7) == True, OSPFRoute(R13_N2, R11, R12, 9) == True, OSPFRoute(R32_N5, R11, R21, 14) == True, OSPFRoute(R31_N7, R11, R21, 16) == True, OSPFRoute(R33_N8, R11, R21, 12) == True, OSPFRoute(R22_N1, R11, R21, 8) == True, OSPFRoute(R31_N3, R11, R21, 16) == True, OSPFRoute(R33_N0, R11, R21, 12) == True, OSPFRoute(R33_N6, R11, R21, 12) == True, OSPFRoute(R12_N4, R31, R21, 11) == True, OSPFRoute(R13_N2, R31, R21, 13) == True, OSPFRoute(R32_N5, R31, R32, 2) == True, OSPFRoute(R33_N8, R31, R32, 7) == True, OSPFRoute(R22_N1, R31, R21, 8) == True, OSPFRoute(R33_N0, R31, R32, 7) == True, OSPFRoute(R33_N6, R31, R32, 7) == True, OSPFRoute(R12_N4, R32, R22, 4) == True, OSPFRoute(R13_N2, R32, R22, 6) == True, OSPFRoute(R31_N7, R32, R31, 7) == True, OSPFRoute(R33_N8, R32, R33, 5) == True, OSPFRoute(R22_N1, R32, R22, 1) == True, OSPFRoute(R31_N3, R32, R31, 7) == True, OSPFRoute(R33_N0, R32, R33, 5) == True, OSPFRoute(R33_N6, R32, R33, 5) == True, OSPFRoute(R12_N4, R33, R23, 17) == True, OSPFRoute(R13_N2, R33, R23, 16) == True, OSPFRoute(R32_N5, R33, R32, 6) == True, OSPFRoute(R31_N7, R33, R32, 13) == True, OSPFRoute(R22_N1, R33, R32, 7) == True, OSPFRoute(R31_N3, R33, R32, 13) == True, OSPFRoute(R12_N4, R23, R13, 2) == True, OSPFRoute(R13_N2, R23, R13, 1) == True, OSPFRoute(R32_N5, R23, R22, 8) == True, OSPFRoute(R31_N7, R23, R22, 15) == True, OSPFRoute(R33_N8, R23, R33, 3) == True, OSPFRoute(R22_N1, R23, R22, 2) == True, OSPFRoute(R31_N3, R23, R22, 15) == True, OSPFRoute(R33_N0, R23, R33, 3) == True, OSPFRoute(R12_N4, R22, R12, 3) == True, OSPFRoute(R13_N2, R22, R12, 5) == True, OSPFRoute(R32_N5, R22, R32, 6) == True, OSPFRoute(R31_N7, R22, R32, 13) == True, OSPFRoute(R33_N8, R22, R23, 4) == True, OSPFRoute(R31_N3, R22, R32, 13) == True, OSPFRoute(R33_N0, R22, R23, 4) == True, OSPFRoute(R12_N4, R21, R22, 4) == True, OSPFRoute(R13_N2, R21, R22, 6) == True, OSPFRoute(R32_N5, R21, R22, 7) == True, OSPFRoute(R31_N7, R21, R31, 9) == True, OSPFRoute(R33_N8, R21, R22, 5) == True, OSPFRoute(R22_N1, R21, R22, 1) == True, OSPFRoute(R31_N3, R21, R31, 9) == True, OSPFRoute(R33_N0, R21, R22, 5) == True, OSPFRoute(R33_N6, R23, R33, 3) == True, OSPFRoute(R33_N6, R22, R23, 4) == True, OSPFRoute(R33_N6, R21, R22, 5) == True]
Checking SAT for box ospf02-0 ...
SAT, reading inputs...
	Synthesized input OSPFRoute [[R13_N2, R12, R13, 2, True], [R32_N5, R12, R22, 10, True], [R31_N7, R12, R22, 17, True], [R33_N8, R12, R13, 6, True], [R22_N1, R12, R22, 4, True], [R31_N3, R12, R22, 17, True], [R33_N0, R12, R13, 6, True], [R33_N6, R12, R13, 6, True], [R12_N4, R13, R12, 1, True], [R32_N5, R13, R23, 9, True], [R31_N7, R13, R23, 16, True], [R33_N8, R13, R23, 4, True], [R22_N1, R13, R23, 3, True], [R31_N3, R13, R23, 16, True], [R33_N0, R13, R23, 4, True], [R33_N6, R13, R23, 4, True], [R12_N4, R11, R12, 7, True], [R13_N2, R11, R12, 9, True], [R32_N5, R11, R21, 14, True], [R31_N7, R11, R21, 16, True], [R33_N8, R11, R21, 12, True], [R22_N1, R11, R21, 8, True], [R31_N3, R11, R21, 16, True], [R33_N0, R11, R21, 12, True], [R33_N6, R11, R21, 12, True], [R12_N4, R31, R21, 11, True], [R13_N2, R31, R21, 13, True], [R32_N5, R31, R32, 2, True], [R33_N8, R31, R32, 7, True], [R22_N1, R31, R21, 8, True], [R33_N0, R31, R32, 7, True], [R33_N6, R31, R32, 7, True], [R12_N4, R32, R22, 4, True], [R13_N2, R32, R22, 6, True], [R31_N7, R32, R31, 7, True], [R33_N8, R32, R33, 5, True], [R22_N1, R32, R22, 1, True], [R31_N3, R32, R31, 7, True], [R33_N0, R32, R33, 5, True], [R33_N6, R32, R33, 5, True], [R12_N4, R33, R23, 17, True], [R13_N2, R33, R23, 16, True], [R32_N5, R33, R32, 6, True], [R31_N7, R33, R32, 13, True], [R22_N1, R33, R32, 7, True], [R31_N3, R33, R32, 13, True], [R12_N4, R23, R13, 2, True], [R13_N2, R23, R13, 1, True], [R32_N5, R23, R22, 8, True], [R31_N7, R23, R22, 15, True], [R33_N8, R23, R33, 3, True], [R22_N1, R23, R22, 2, True], [R31_N3, R23, R22, 15, True], [R33_N0, R23, R33, 3, True], [R12_N4, R22, R12, 3, True], [R13_N2, R22, R12, 5, True], [R32_N5, R22, R32, 6, True], [R31_N7, R22, R32, 13, True], [R33_N8, R22, R23, 4, True], [R31_N3, R22, R32, 13, True], [R33_N0, R22, R23, 4, True], [R12_N4, R21, R22, 4, True], [R13_N2, R21, R22, 6, True], [R32_N5, R21, R22, 7, True], [R31_N7, R21, R31, 9, True], [R33_N8, R21, R22, 5, True], [R22_N1, R21, R22, 1, True], [R31_N3, R21, R31, 9, True], [R33_N0, R21, R22, 5, True], [R33_N6, R23, R33, 3, True], [R33_N6, R22, R23, 4, True], [R33_N6, R21, R22, 5, True], 'False']
partially evaluate the OSPF Datalog rules
OSPFRoute(network, src, next, cost) <- !EdgePhy(src, network), Network(network), ConnectedNodes(src, siface, diface, next), SetOSPFEdgeCost(siface, diface, cost1), OSPFRoute(network, next, next2, cost2), cost = cost1 + cost2, cost < 100, src != next2
OSPFRoute_R12_N4_R13_R12(cost) <- SetOSPFEdgeCost(src, nxt, cost  ), src="I13_2", nxt="I12_1", cost = 1.
OSPFRoute_R12_N4_R13_R12(cost) -> int(cost).
OSPFRoute_R12_N4_R11_R12(cost) <- SetOSPFEdgeCost(src, nxt, cost  ), src="I11_1", nxt="I12_2", cost = 7.
OSPFRoute_R12_N4_R11_R12(cost) -> int(cost).
OSPFRoute_R12_N4_R22_R12(cost) <- SetOSPFEdgeCost(src, nxt, cost  ), src="I22_4", nxt="I12_3", cost = 3.
OSPFRoute_R12_N4_R22_R12(cost) -> int(cost).
OSPFRoute_R12_N4_R21_R22(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I21_1", nxt="I22_2", cost = cost1 + 3.
OSPFRoute_R12_N4_R21_R22(cost) -> int(cost).
OSPFRoute_R12_N4_R23_R13(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I23_4", nxt="I13_3", cost = cost1 + 1.
OSPFRoute_R12_N4_R23_R13(cost) -> int(cost).
OSPFRoute_R12_N4_R31_R21(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I31_4", nxt="I21_3", cost = cost1 + 4.
OSPFRoute_R12_N4_R31_R21(cost) -> int(cost).
OSPFRoute_R12_N4_R32_R22(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I32_4", nxt="I22_3", cost = cost1 + 3.
OSPFRoute_R12_N4_R32_R22(cost) -> int(cost).
OSPFRoute_R12_N4_R33_R23(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I33_4", nxt="I23_3", cost = cost1 + 2.
OSPFRoute_R12_N4_R33_R23(cost) -> int(cost).
OSPFRoute_R13_N2_R12_R13(cost) <- SetOSPFEdgeCost(src, nxt, cost  ), src="I12_1", nxt="I13_2", cost = 2.
OSPFRoute_R13_N2_R12_R13(cost) -> int(cost).
OSPFRoute_R13_N2_R11_R12(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I11_1", nxt="I12_2", cost = cost1 + 2.
OSPFRoute_R13_N2_R11_R12(cost) -> int(cost).
OSPFRoute_R13_N2_R22_R12(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I22_4", nxt="I12_3", cost = cost1 + 2.
OSPFRoute_R13_N2_R22_R12(cost) -> int(cost).
OSPFRoute_R13_N2_R21_R22(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I21_1", nxt="I22_2", cost = cost1 + 5.
OSPFRoute_R13_N2_R21_R22(cost) -> int(cost).
OSPFRoute_R13_N2_R23_R13(cost) <- SetOSPFEdgeCost(src, nxt, cost  ), src="I23_4", nxt="I13_3", cost = 1.
OSPFRoute_R13_N2_R23_R13(cost) -> int(cost).
OSPFRoute_R13_N2_R31_R21(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I31_4", nxt="I21_3", cost = cost1 + 6.
OSPFRoute_R13_N2_R31_R21(cost) -> int(cost).
OSPFRoute_R13_N2_R32_R22(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I32_4", nxt="I22_3", cost = cost1 + 5.
OSPFRoute_R13_N2_R32_R22(cost) -> int(cost).
OSPFRoute_R13_N2_R33_R23(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I33_4", nxt="I23_3", cost = cost1 + 1.
OSPFRoute_R13_N2_R33_R23(cost) -> int(cost).
OSPFRoute_R32_N5_R12_R22(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I12_3", nxt="I22_4", cost = cost1 + 6.
OSPFRoute_R32_N5_R12_R22(cost) -> int(cost).
OSPFRoute_R32_N5_R13_R23(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I13_3", nxt="I23_4", cost = cost1 + 8.
OSPFRoute_R32_N5_R13_R23(cost) -> int(cost).
OSPFRoute_R32_N5_R11_R21(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I11_3", nxt="I21_4", cost = cost1 + 7.
OSPFRoute_R32_N5_R11_R21(cost) -> int(cost).
OSPFRoute_R32_N5_R22_R32(cost) <- SetOSPFEdgeCost(src, nxt, cost  ), src="I22_3", nxt="I32_4", cost = 6.
OSPFRoute_R32_N5_R22_R32(cost) -> int(cost).
OSPFRoute_R32_N5_R23_R22(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I23_2", nxt="I22_1", cost = cost1 + 6.
OSPFRoute_R32_N5_R23_R22(cost) -> int(cost).
OSPFRoute_R32_N5_R31_R32(cost) <- SetOSPFEdgeCost(src, nxt, cost  ), src="I31_1", nxt="I32_2", cost = 2.
OSPFRoute_R32_N5_R31_R32(cost) -> int(cost).
OSPFRoute_R32_N5_R21_R22(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I21_1", nxt="I22_2", cost = cost1 + 6.
OSPFRoute_R32_N5_R21_R22(cost) -> int(cost).
OSPFRoute_R32_N5_R33_R32(cost) <- SetOSPFEdgeCost(src, nxt, cost  ), src="I33_2", nxt="I32_1", cost = 6.
OSPFRoute_R32_N5_R33_R32(cost) -> int(cost).
OSPFRoute_R31_N7_R12_R22(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I12_3", nxt="I22_4", cost = cost1 + 13.
OSPFRoute_R31_N7_R12_R22(cost) -> int(cost).
OSPFRoute_R31_N7_R13_R23(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I13_3", nxt="I23_4", cost = cost1 + 15.
OSPFRoute_R31_N7_R13_R23(cost) -> int(cost).
OSPFRoute_R31_N7_R11_R21(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I11_3", nxt="I21_4", cost = cost1 + 9.
OSPFRoute_R31_N7_R11_R21(cost) -> int(cost).
OSPFRoute_R31_N7_R21_R31(cost) <- SetOSPFEdgeCost(src, nxt, cost  ), src="I21_3", nxt="I31_4", cost = 9.
OSPFRoute_R31_N7_R21_R31(cost) -> int(cost).
OSPFRoute_R31_N7_R23_R22(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I23_2", nxt="I22_1", cost = cost1 + 13.
OSPFRoute_R31_N7_R23_R22(cost) -> int(cost).
OSPFRoute_R31_N7_R22_R32(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I22_3", nxt="I32_4", cost = cost1 + 7.
OSPFRoute_R31_N7_R22_R32(cost) -> int(cost).
OSPFRoute_R31_N7_R32_R31(cost) <- SetOSPFEdgeCost(src, nxt, cost  ), src="I32_2", nxt="I31_1", cost = 7.
OSPFRoute_R31_N7_R32_R31(cost) -> int(cost).
OSPFRoute_R31_N7_R33_R32(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I33_2", nxt="I32_1", cost = cost1 + 7.
OSPFRoute_R31_N7_R33_R32(cost) -> int(cost).
OSPFRoute_R33_N8_R12_R13(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I12_1", nxt="I13_2", cost = cost1 + 4.
OSPFRoute_R33_N8_R12_R13(cost) -> int(cost).
OSPFRoute_R33_N8_R13_R23(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I13_3", nxt="I23_4", cost = cost1 + 3.
OSPFRoute_R33_N8_R13_R23(cost) -> int(cost).
OSPFRoute_R33_N8_R11_R21(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I11_3", nxt="I21_4", cost = cost1 + 5.
OSPFRoute_R33_N8_R11_R21(cost) -> int(cost).
OSPFRoute_R33_N8_R22_R23(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I22_1", nxt="I23_2", cost = cost1 + 3.
OSPFRoute_R33_N8_R22_R23(cost) -> int(cost).
OSPFRoute_R33_N8_R21_R22(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I21_1", nxt="I22_2", cost = cost1 + 4.
OSPFRoute_R33_N8_R21_R22(cost) -> int(cost).
OSPFRoute_R33_N8_R23_R33(cost) <- SetOSPFEdgeCost(src, nxt, cost  ), src="I23_3", nxt="I33_4", cost = 3.
OSPFRoute_R33_N8_R23_R33(cost) -> int(cost).
OSPFRoute_R33_N8_R31_R32(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I31_1", nxt="I32_2", cost = cost1 + 5.
OSPFRoute_R33_N8_R31_R32(cost) -> int(cost).
OSPFRoute_R33_N8_R32_R33(cost) <- SetOSPFEdgeCost(src, nxt, cost  ), src="I32_1", nxt="I33_2", cost = 5.
OSPFRoute_R33_N8_R32_R33(cost) -> int(cost).
OSPFRoute_R22_N1_R12_R22(cost) <- SetOSPFEdgeCost(src, nxt, cost  ), src="I12_3", nxt="I22_4", cost = 4.
OSPFRoute_R22_N1_R12_R22(cost) -> int(cost).
OSPFRoute_R22_N1_R13_R23(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I13_3", nxt="I23_4", cost = cost1 + 2.
OSPFRoute_R22_N1_R13_R23(cost) -> int(cost).
OSPFRoute_R22_N1_R11_R21(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I11_3", nxt="I21_4", cost = cost1 + 1.
OSPFRoute_R22_N1_R11_R21(cost) -> int(cost).
OSPFRoute_R22_N1_R21_R22(cost) <- SetOSPFEdgeCost(src, nxt, cost  ), src="I21_1", nxt="I22_2", cost = 1.
OSPFRoute_R22_N1_R21_R22(cost) -> int(cost).
OSPFRoute_R22_N1_R23_R22(cost) <- SetOSPFEdgeCost(src, nxt, cost  ), src="I23_2", nxt="I22_1", cost = 2.
OSPFRoute_R22_N1_R23_R22(cost) -> int(cost).
OSPFRoute_R22_N1_R31_R21(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I31_4", nxt="I21_3", cost = cost1 + 1.
OSPFRoute_R22_N1_R31_R21(cost) -> int(cost).
OSPFRoute_R22_N1_R32_R22(cost) <- SetOSPFEdgeCost(src, nxt, cost  ), src="I32_4", nxt="I22_3", cost = 1.
OSPFRoute_R22_N1_R32_R22(cost) -> int(cost).
OSPFRoute_R22_N1_R33_R32(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I33_2", nxt="I32_1", cost = cost1 + 1.
OSPFRoute_R22_N1_R33_R32(cost) -> int(cost).
OSPFRoute_R31_N3_R12_R22(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I12_3", nxt="I22_4", cost = cost1 + 13.
OSPFRoute_R31_N3_R12_R22(cost) -> int(cost).
OSPFRoute_R31_N3_R13_R23(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I13_3", nxt="I23_4", cost = cost1 + 15.
OSPFRoute_R31_N3_R13_R23(cost) -> int(cost).
OSPFRoute_R31_N3_R11_R21(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I11_3", nxt="I21_4", cost = cost1 + 9.
OSPFRoute_R31_N3_R11_R21(cost) -> int(cost).
OSPFRoute_R31_N3_R21_R31(cost) <- SetOSPFEdgeCost(src, nxt, cost  ), src="I21_3", nxt="I31_4", cost = 9.
OSPFRoute_R31_N3_R21_R31(cost) -> int(cost).
OSPFRoute_R31_N3_R23_R22(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I23_2", nxt="I22_1", cost = cost1 + 13.
OSPFRoute_R31_N3_R23_R22(cost) -> int(cost).
OSPFRoute_R31_N3_R22_R32(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I22_3", nxt="I32_4", cost = cost1 + 7.
OSPFRoute_R31_N3_R22_R32(cost) -> int(cost).
OSPFRoute_R31_N3_R32_R31(cost) <- SetOSPFEdgeCost(src, nxt, cost  ), src="I32_2", nxt="I31_1", cost = 7.
OSPFRoute_R31_N3_R32_R31(cost) -> int(cost).
OSPFRoute_R31_N3_R33_R32(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I33_2", nxt="I32_1", cost = cost1 + 7.
OSPFRoute_R31_N3_R33_R32(cost) -> int(cost).
OSPFRoute_R33_N0_R12_R13(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I12_1", nxt="I13_2", cost = cost1 + 4.
OSPFRoute_R33_N0_R12_R13(cost) -> int(cost).
OSPFRoute_R33_N0_R13_R23(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I13_3", nxt="I23_4", cost = cost1 + 3.
OSPFRoute_R33_N0_R13_R23(cost) -> int(cost).
OSPFRoute_R33_N0_R11_R21(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I11_3", nxt="I21_4", cost = cost1 + 5.
OSPFRoute_R33_N0_R11_R21(cost) -> int(cost).
OSPFRoute_R33_N0_R22_R23(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I22_1", nxt="I23_2", cost = cost1 + 3.
OSPFRoute_R33_N0_R22_R23(cost) -> int(cost).
OSPFRoute_R33_N0_R21_R22(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I21_1", nxt="I22_2", cost = cost1 + 4.
OSPFRoute_R33_N0_R21_R22(cost) -> int(cost).
OSPFRoute_R33_N0_R23_R33(cost) <- SetOSPFEdgeCost(src, nxt, cost  ), src="I23_3", nxt="I33_4", cost = 3.
OSPFRoute_R33_N0_R23_R33(cost) -> int(cost).
OSPFRoute_R33_N0_R31_R32(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I31_1", nxt="I32_2", cost = cost1 + 5.
OSPFRoute_R33_N0_R31_R32(cost) -> int(cost).
OSPFRoute_R33_N0_R32_R33(cost) <- SetOSPFEdgeCost(src, nxt, cost  ), src="I32_1", nxt="I33_2", cost = 5.
OSPFRoute_R33_N0_R32_R33(cost) -> int(cost).
OSPFRoute_R33_N6_R12_R13(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I12_1", nxt="I13_2", cost = cost1 + 4.
OSPFRoute_R33_N6_R12_R13(cost) -> int(cost).
OSPFRoute_R33_N6_R13_R23(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I13_3", nxt="I23_4", cost = cost1 + 3.
OSPFRoute_R33_N6_R13_R23(cost) -> int(cost).
OSPFRoute_R33_N6_R11_R21(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I11_3", nxt="I21_4", cost = cost1 + 5.
OSPFRoute_R33_N6_R11_R21(cost) -> int(cost).
OSPFRoute_R33_N6_R22_R23(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I22_1", nxt="I23_2", cost = cost1 + 3.
OSPFRoute_R33_N6_R22_R23(cost) -> int(cost).
OSPFRoute_R33_N6_R21_R22(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I21_1", nxt="I22_2", cost = cost1 + 4.
OSPFRoute_R33_N6_R21_R22(cost) -> int(cost).
OSPFRoute_R33_N6_R23_R33(cost) <- SetOSPFEdgeCost(src, nxt, cost  ), src="I23_3", nxt="I33_4", cost = 3.
OSPFRoute_R33_N6_R23_R33(cost) -> int(cost).
OSPFRoute_R33_N6_R31_R32(cost) <- SetOSPFEdgeCost(src, nxt, cost1), src="I31_1", nxt="I32_2", cost = cost1 + 5.
OSPFRoute_R33_N6_R31_R32(cost) -> int(cost).
OSPFRoute_R33_N6_R32_R33(cost) <- SetOSPFEdgeCost(src, nxt, cost  ), src="I32_1", nxt="I33_2", cost = 5.
OSPFRoute_R33_N6_R32_R33(cost) -> int(cost).
OSPFRoute_R13_N2_R12_R13(2) == True
ForAll(cost, OSPFRoute_R13_N2_R12_R13(cost) == (cost == 2))
OSPFRoute_R32_N5_R12_R22(10) == True
ForAll(cost, OSPFRoute_R32_N5_R12_R22(cost) == (cost == 10))
OSPFRoute_R31_N7_R12_R22(17) == True
ForAll(cost, OSPFRoute_R31_N7_R12_R22(cost) == (cost == 17))
OSPFRoute_R33_N8_R12_R13(6) == True
ForAll(cost, OSPFRoute_R33_N8_R12_R13(cost) == (cost == 6))
OSPFRoute_R22_N1_R12_R22(4) == True
ForAll(cost, OSPFRoute_R22_N1_R12_R22(cost) == (cost == 4))
OSPFRoute_R31_N3_R12_R22(17) == True
ForAll(cost, OSPFRoute_R31_N3_R12_R22(cost) == (cost == 17))
OSPFRoute_R33_N0_R12_R13(6) == True
ForAll(cost, OSPFRoute_R33_N0_R12_R13(cost) == (cost == 6))
OSPFRoute_R33_N6_R12_R13(6) == True
ForAll(cost, OSPFRoute_R33_N6_R12_R13(cost) == (cost == 6))
OSPFRoute_R12_N4_R13_R12(1) == True
ForAll(cost, OSPFRoute_R12_N4_R13_R12(cost) == (cost == 1))
OSPFRoute_R32_N5_R13_R23(9) == True
ForAll(cost, OSPFRoute_R32_N5_R13_R23(cost) == (cost == 9))
OSPFRoute_R31_N7_R13_R23(16) == True
ForAll(cost, OSPFRoute_R31_N7_R13_R23(cost) == (cost == 16))
OSPFRoute_R33_N8_R13_R23(4) == True
ForAll(cost, OSPFRoute_R33_N8_R13_R23(cost) == (cost == 4))
OSPFRoute_R22_N1_R13_R23(3) == True
ForAll(cost, OSPFRoute_R22_N1_R13_R23(cost) == (cost == 3))
OSPFRoute_R31_N3_R13_R23(16) == True
ForAll(cost, OSPFRoute_R31_N3_R13_R23(cost) == (cost == 16))
OSPFRoute_R33_N0_R13_R23(4) == True
ForAll(cost, OSPFRoute_R33_N0_R13_R23(cost) == (cost == 4))
OSPFRoute_R33_N6_R13_R23(4) == True
ForAll(cost, OSPFRoute_R33_N6_R13_R23(cost) == (cost == 4))
OSPFRoute_R12_N4_R11_R12(7) == True
ForAll(cost, OSPFRoute_R12_N4_R11_R12(cost) == (cost == 7))
OSPFRoute_R13_N2_R11_R12(9) == True
ForAll(cost, OSPFRoute_R13_N2_R11_R12(cost) == (cost == 9))
OSPFRoute_R32_N5_R11_R21(14) == True
ForAll(cost, OSPFRoute_R32_N5_R11_R21(cost) == (cost == 14))
OSPFRoute_R31_N7_R11_R21(16) == True
ForAll(cost, OSPFRoute_R31_N7_R11_R21(cost) == (cost == 16))
OSPFRoute_R33_N8_R11_R21(12) == True
ForAll(cost, OSPFRoute_R33_N8_R11_R21(cost) == (cost == 12))
OSPFRoute_R22_N1_R11_R21(8) == True
ForAll(cost, OSPFRoute_R22_N1_R11_R21(cost) == (cost == 8))
OSPFRoute_R31_N3_R11_R21(16) == True
ForAll(cost, OSPFRoute_R31_N3_R11_R21(cost) == (cost == 16))
OSPFRoute_R33_N0_R11_R21(12) == True
ForAll(cost, OSPFRoute_R33_N0_R11_R21(cost) == (cost == 12))
OSPFRoute_R33_N6_R11_R21(12) == True
ForAll(cost, OSPFRoute_R33_N6_R11_R21(cost) == (cost == 12))
OSPFRoute_R12_N4_R31_R21(11) == True
ForAll(cost, OSPFRoute_R12_N4_R31_R21(cost) == (cost == 11))
OSPFRoute_R13_N2_R31_R21(13) == True
ForAll(cost, OSPFRoute_R13_N2_R31_R21(cost) == (cost == 13))
OSPFRoute_R32_N5_R31_R32(2) == True
ForAll(cost, OSPFRoute_R32_N5_R31_R32(cost) == (cost == 2))
OSPFRoute_R33_N8_R31_R32(7) == True
ForAll(cost, OSPFRoute_R33_N8_R31_R32(cost) == (cost == 7))
OSPFRoute_R22_N1_R31_R21(8) == True
ForAll(cost, OSPFRoute_R22_N1_R31_R21(cost) == (cost == 8))
OSPFRoute_R33_N0_R31_R32(7) == True
ForAll(cost, OSPFRoute_R33_N0_R31_R32(cost) == (cost == 7))
OSPFRoute_R33_N6_R31_R32(7) == True
ForAll(cost, OSPFRoute_R33_N6_R31_R32(cost) == (cost == 7))
OSPFRoute_R12_N4_R32_R22(4) == True
ForAll(cost, OSPFRoute_R12_N4_R32_R22(cost) == (cost == 4))
OSPFRoute_R13_N2_R32_R22(6) == True
ForAll(cost, OSPFRoute_R13_N2_R32_R22(cost) == (cost == 6))
OSPFRoute_R31_N7_R32_R31(7) == True
ForAll(cost, OSPFRoute_R31_N7_R32_R31(cost) == (cost == 7))
OSPFRoute_R33_N8_R32_R33(5) == True
ForAll(cost, OSPFRoute_R33_N8_R32_R33(cost) == (cost == 5))
OSPFRoute_R22_N1_R32_R22(1) == True
ForAll(cost, OSPFRoute_R22_N1_R32_R22(cost) == (cost == 1))
OSPFRoute_R31_N3_R32_R31(7) == True
ForAll(cost, OSPFRoute_R31_N3_R32_R31(cost) == (cost == 7))
OSPFRoute_R33_N0_R32_R33(5) == True
ForAll(cost, OSPFRoute_R33_N0_R32_R33(cost) == (cost == 5))
OSPFRoute_R33_N6_R32_R33(5) == True
ForAll(cost, OSPFRoute_R33_N6_R32_R33(cost) == (cost == 5))
OSPFRoute_R12_N4_R33_R23(17) == True
ForAll(cost, OSPFRoute_R12_N4_R33_R23(cost) == (cost == 17))
OSPFRoute_R13_N2_R33_R23(16) == True
ForAll(cost, OSPFRoute_R13_N2_R33_R23(cost) == (cost == 16))
OSPFRoute_R32_N5_R33_R32(6) == True
ForAll(cost, OSPFRoute_R32_N5_R33_R32(cost) == (cost == 6))
OSPFRoute_R31_N7_R33_R32(13) == True
ForAll(cost, OSPFRoute_R31_N7_R33_R32(cost) == (cost == 13))
OSPFRoute_R22_N1_R33_R32(7) == True
ForAll(cost, OSPFRoute_R22_N1_R33_R32(cost) == (cost == 7))
OSPFRoute_R31_N3_R33_R32(13) == True
ForAll(cost, OSPFRoute_R31_N3_R33_R32(cost) == (cost == 13))
OSPFRoute_R12_N4_R23_R13(2) == True
ForAll(cost, OSPFRoute_R12_N4_R23_R13(cost) == (cost == 2))
OSPFRoute_R13_N2_R23_R13(1) == True
ForAll(cost, OSPFRoute_R13_N2_R23_R13(cost) == (cost == 1))
OSPFRoute_R32_N5_R23_R22(8) == True
ForAll(cost, OSPFRoute_R32_N5_R23_R22(cost) == (cost == 8))
OSPFRoute_R31_N7_R23_R22(15) == True
ForAll(cost, OSPFRoute_R31_N7_R23_R22(cost) == (cost == 15))
OSPFRoute_R33_N8_R23_R33(3) == True
ForAll(cost, OSPFRoute_R33_N8_R23_R33(cost) == (cost == 3))
OSPFRoute_R22_N1_R23_R22(2) == True
ForAll(cost, OSPFRoute_R22_N1_R23_R22(cost) == (cost == 2))
OSPFRoute_R31_N3_R23_R22(15) == True
ForAll(cost, OSPFRoute_R31_N3_R23_R22(cost) == (cost == 15))
OSPFRoute_R33_N0_R23_R33(3) == True
ForAll(cost, OSPFRoute_R33_N0_R23_R33(cost) == (cost == 3))
OSPFRoute_R12_N4_R22_R12(3) == True
ForAll(cost, OSPFRoute_R12_N4_R22_R12(cost) == (cost == 3))
OSPFRoute_R13_N2_R22_R12(5) == True
ForAll(cost, OSPFRoute_R13_N2_R22_R12(cost) == (cost == 5))
OSPFRoute_R32_N5_R22_R32(6) == True
ForAll(cost, OSPFRoute_R32_N5_R22_R32(cost) == (cost == 6))
OSPFRoute_R31_N7_R22_R32(13) == True
ForAll(cost, OSPFRoute_R31_N7_R22_R32(cost) == (cost == 13))
OSPFRoute_R33_N8_R22_R23(4) == True
ForAll(cost, OSPFRoute_R33_N8_R22_R23(cost) == (cost == 4))
OSPFRoute_R31_N3_R22_R32(13) == True
ForAll(cost, OSPFRoute_R31_N3_R22_R32(cost) == (cost == 13))
OSPFRoute_R33_N0_R22_R23(4) == True
ForAll(cost, OSPFRoute_R33_N0_R22_R23(cost) == (cost == 4))
OSPFRoute_R12_N4_R21_R22(4) == True
ForAll(cost, OSPFRoute_R12_N4_R21_R22(cost) == (cost == 4))
OSPFRoute_R13_N2_R21_R22(6) == True
ForAll(cost, OSPFRoute_R13_N2_R21_R22(cost) == (cost == 6))
OSPFRoute_R32_N5_R21_R22(7) == True
ForAll(cost, OSPFRoute_R32_N5_R21_R22(cost) == (cost == 7))
OSPFRoute_R31_N7_R21_R31(9) == True
ForAll(cost, OSPFRoute_R31_N7_R21_R31(cost) == (cost == 9))
OSPFRoute_R33_N8_R21_R22(5) == True
ForAll(cost, OSPFRoute_R33_N8_R21_R22(cost) == (cost == 5))
OSPFRoute_R22_N1_R21_R22(1) == True
ForAll(cost, OSPFRoute_R22_N1_R21_R22(cost) == (cost == 1))
OSPFRoute_R31_N3_R21_R31(9) == True
ForAll(cost, OSPFRoute_R31_N3_R21_R31(cost) == (cost == 9))
OSPFRoute_R33_N0_R21_R22(5) == True
ForAll(cost, OSPFRoute_R33_N0_R21_R22(cost) == (cost == 5))
OSPFRoute_R33_N6_R23_R33(3) == True
ForAll(cost, OSPFRoute_R33_N6_R23_R33(cost) == (cost == 3))
OSPFRoute_R33_N6_R22_R23(4) == True
ForAll(cost, OSPFRoute_R33_N6_R22_R23(cost) == (cost == 4))
OSPFRoute_R33_N6_R21_R22(5) == True
ForAll(cost, OSPFRoute_R33_N6_R21_R22(cost) == (cost == 5))
##############################
Synthesizing for box 0 ospf01
Feeding desired outputs for ospf01...
	Feeding desired output ospf01 [OSPFRoute_1(R13_N2, R12, R13, 2) == True, OSPFRoute_1(R32_N5, R12, R22, 10) == True, OSPFRoute_1(R31_N7, R12, R22, 17) == True, OSPFRoute_1(R33_N8, R12, R13, 6) == True, OSPFRoute_1(R22_N1, R12, R22, 4) == True, OSPFRoute_1(R31_N3, R12, R22, 17) == True, OSPFRoute_1(R33_N0, R12, R13, 6) == True, OSPFRoute_1(R33_N6, R12, R13, 6) == True, OSPFRoute_1(R12_N4, R13, R12, 1) == True, OSPFRoute_1(R32_N5, R13, R23, 9) == True, OSPFRoute_1(R31_N7, R13, R23, 16) == True, OSPFRoute_1(R33_N8, R13, R23, 4) == True, OSPFRoute_1(R22_N1, R13, R23, 3) == True, OSPFRoute_1(R31_N3, R13, R23, 16) == True, OSPFRoute_1(R33_N0, R13, R23, 4) == True, OSPFRoute_1(R33_N6, R13, R23, 4) == True, OSPFRoute_1(R12_N4, R11, R12, 7) == True, OSPFRoute_1(R13_N2, R11, R12, 9) == True, OSPFRoute_1(R32_N5, R11, R21, 14) == True, OSPFRoute_1(R31_N7, R11, R21, 16) == True, OSPFRoute_1(R33_N8, R11, R21, 12) == True, OSPFRoute_1(R22_N1, R11, R21, 8) == True, OSPFRoute_1(R31_N3, R11, R21, 16) == True, OSPFRoute_1(R33_N0, R11, R21, 12) == True, OSPFRoute_1(R33_N6, R11, R21, 12) == True, OSPFRoute_1(R12_N4, R31, R21, 11) == True, OSPFRoute_1(R13_N2, R31, R21, 13) == True, OSPFRoute_1(R32_N5, R31, R32, 2) == True, OSPFRoute_1(R33_N8, R31, R32, 7) == True, OSPFRoute_1(R22_N1, R31, R21, 8) == True, OSPFRoute_1(R33_N0, R31, R32, 7) == True, OSPFRoute_1(R33_N6, R31, R32, 7) == True, OSPFRoute_1(R12_N4, R32, R22, 4) == True, OSPFRoute_1(R13_N2, R32, R22, 6) == True, OSPFRoute_1(R31_N7, R32, R31, 7) == True, OSPFRoute_1(R33_N8, R32, R33, 5) == True, OSPFRoute_1(R22_N1, R32, R22, 1) == True, OSPFRoute_1(R31_N3, R32, R31, 7) == True, OSPFRoute_1(R33_N0, R32, R33, 5) == True, OSPFRoute_1(R33_N6, R32, R33, 5) == True, OSPFRoute_1(R12_N4, R33, R23, 17) == True, OSPFRoute_1(R13_N2, R33, R23, 16) == True, OSPFRoute_1(R32_N5, R33, R32, 6) == True, OSPFRoute_1(R31_N7, R33, R32, 13) == True, OSPFRoute_1(R22_N1, R33, R32, 7) == True, OSPFRoute_1(R31_N3, R33, R32, 13) == True, OSPFRoute_1(R12_N4, R23, R13, 2) == True, OSPFRoute_1(R13_N2, R23, R13, 1) == True, OSPFRoute_1(R32_N5, R23, R22, 8) == True, OSPFRoute_1(R31_N7, R23, R22, 15) == True, OSPFRoute_1(R33_N8, R23, R33, 3) == True, OSPFRoute_1(R22_N1, R23, R22, 2) == True, OSPFRoute_1(R31_N3, R23, R22, 15) == True, OSPFRoute_1(R33_N0, R23, R33, 3) == True, OSPFRoute_1(R12_N4, R22, R12, 3) == True, OSPFRoute_1(R13_N2, R22, R12, 5) == True, OSPFRoute_1(R32_N5, R22, R32, 6) == True, OSPFRoute_1(R31_N7, R22, R32, 13) == True, OSPFRoute_1(R33_N8, R22, R23, 4) == True, OSPFRoute_1(R31_N3, R22, R32, 13) == True, OSPFRoute_1(R33_N0, R22, R23, 4) == True, OSPFRoute_1(R12_N4, R21, R22, 4) == True, OSPFRoute_1(R13_N2, R21, R22, 6) == True, OSPFRoute_1(R32_N5, R21, R22, 7) == True, OSPFRoute_1(R31_N7, R21, R31, 9) == True, OSPFRoute_1(R33_N8, R21, R22, 5) == True, OSPFRoute_1(R22_N1, R21, R22, 1) == True, OSPFRoute_1(R31_N3, R21, R31, 9) == True, OSPFRoute_1(R33_N0, R21, R22, 5) == True, OSPFRoute_1(R33_N6, R23, R33, 3) == True, OSPFRoute_1(R33_N6, R22, R23, 4) == True, OSPFRoute_1(R33_N6, R21, R22, 5) == True]
	Feeding desired output ospf01 [OSPFRoute_1(R13_N2, R12, R13, 2) == True, OSPFRoute_1(R32_N5, R12, R22, 10) == True, OSPFRoute_1(R31_N7, R12, R22, 17) == True, OSPFRoute_1(R33_N8, R12, R13, 6) == True, OSPFRoute_1(R22_N1, R12, R22, 4) == True, OSPFRoute_1(R31_N3, R12, R22, 17) == True, OSPFRoute_1(R33_N0, R12, R13, 6) == True, OSPFRoute_1(R33_N6, R12, R13, 6) == True, OSPFRoute_1(R12_N4, R13, R12, 1) == True, OSPFRoute_1(R32_N5, R13, R23, 9) == True, OSPFRoute_1(R31_N7, R13, R23, 16) == True, OSPFRoute_1(R33_N8, R13, R23, 4) == True, OSPFRoute_1(R22_N1, R13, R23, 3) == True, OSPFRoute_1(R31_N3, R13, R23, 16) == True, OSPFRoute_1(R33_N0, R13, R23, 4) == True, OSPFRoute_1(R33_N6, R13, R23, 4) == True, OSPFRoute_1(R12_N4, R11, R12, 7) == True, OSPFRoute_1(R13_N2, R11, R12, 9) == True, OSPFRoute_1(R32_N5, R11, R21, 14) == True, OSPFRoute_1(R31_N7, R11, R21, 16) == True, OSPFRoute_1(R33_N8, R11, R21, 12) == True, OSPFRoute_1(R22_N1, R11, R21, 8) == True, OSPFRoute_1(R31_N3, R11, R21, 16) == True, OSPFRoute_1(R33_N0, R11, R21, 12) == True, OSPFRoute_1(R33_N6, R11, R21, 12) == True, OSPFRoute_1(R12_N4, R31, R21, 11) == True, OSPFRoute_1(R13_N2, R31, R21, 13) == True, OSPFRoute_1(R32_N5, R31, R32, 2) == True, OSPFRoute_1(R33_N8, R31, R32, 7) == True, OSPFRoute_1(R22_N1, R31, R21, 8) == True, OSPFRoute_1(R33_N0, R31, R32, 7) == True, OSPFRoute_1(R33_N6, R31, R32, 7) == True, OSPFRoute_1(R12_N4, R32, R22, 4) == True, OSPFRoute_1(R13_N2, R32, R22, 6) == True, OSPFRoute_1(R31_N7, R32, R31, 7) == True, OSPFRoute_1(R33_N8, R32, R33, 5) == True, OSPFRoute_1(R22_N1, R32, R22, 1) == True, OSPFRoute_1(R31_N3, R32, R31, 7) == True, OSPFRoute_1(R33_N0, R32, R33, 5) == True, OSPFRoute_1(R33_N6, R32, R33, 5) == True, OSPFRoute_1(R12_N4, R33, R23, 17) == True, OSPFRoute_1(R13_N2, R33, R23, 16) == True, OSPFRoute_1(R32_N5, R33, R32, 6) == True, OSPFRoute_1(R31_N7, R33, R32, 13) == True, OSPFRoute_1(R22_N1, R33, R32, 7) == True, OSPFRoute_1(R31_N3, R33, R32, 13) == True, OSPFRoute_1(R12_N4, R23, R13, 2) == True, OSPFRoute_1(R13_N2, R23, R13, 1) == True, OSPFRoute_1(R32_N5, R23, R22, 8) == True, OSPFRoute_1(R31_N7, R23, R22, 15) == True, OSPFRoute_1(R33_N8, R23, R33, 3) == True, OSPFRoute_1(R22_N1, R23, R22, 2) == True, OSPFRoute_1(R31_N3, R23, R22, 15) == True, OSPFRoute_1(R33_N0, R23, R33, 3) == True, OSPFRoute_1(R12_N4, R22, R12, 3) == True, OSPFRoute_1(R13_N2, R22, R12, 5) == True, OSPFRoute_1(R32_N5, R22, R32, 6) == True, OSPFRoute_1(R31_N7, R22, R32, 13) == True, OSPFRoute_1(R33_N8, R22, R23, 4) == True, OSPFRoute_1(R31_N3, R22, R32, 13) == True, OSPFRoute_1(R33_N0, R22, R23, 4) == True, OSPFRoute_1(R12_N4, R21, R22, 4) == True, OSPFRoute_1(R13_N2, R21, R22, 6) == True, OSPFRoute_1(R32_N5, R21, R22, 7) == True, OSPFRoute_1(R31_N7, R21, R31, 9) == True, OSPFRoute_1(R33_N8, R21, R22, 5) == True, OSPFRoute_1(R22_N1, R21, R22, 1) == True, OSPFRoute_1(R31_N3, R21, R31, 9) == True, OSPFRoute_1(R33_N0, R21, R22, 5) == True, OSPFRoute_1(R33_N6, R23, R33, 3) == True, OSPFRoute_1(R33_N6, R22, R23, 4) == True, OSPFRoute_1(R33_N6, R21, R22, 5) == True]
Checking SAT for box ospf01 ...
SAT, reading inputs...
	Synthesized input ConnectedNodes [[R12, I12_3, I22_4, R22, True], [R12, I12_2, I11_1, R11, True], [R12, I12_1, I13_2, R13, True], [R23, I23_4, I13_3, R13, True], [R21, I21_4, I11_3, R11, True], [R21, I21_3, I31_4, R31, True], [R21, I21_1, I22_2, R22, True], [R22, I22_3, I32_4, R32, True], [R13, I13_2, I12_1, R12, True], [R33, I33_4, I23_3, R23, True], [R32, I32_2, I31_1, R31, True], [R11, I11_1, I12_2, R12, True], [R22, I22_4, I12_3, R12, True], [R32, I32_4, I22_3, R22, True], [R22, I22_1, I23_2, R23, True], [R31, I31_1, I32_2, R32, True], [R31, I31_4, I21_3, R21, True], [R33, I33_2, I32_1, R32, True], [R22, I22_2, I21_1, R21, True], [R32, I32_1, I33_2, R33, True], [R11, I11_3, I21_4, R21, True], [R23, I23_3, I33_4, R33, True], [R23, I23_2, I22_1, R22, True], [R13, I13_3, I23_4, R23, True], 'False']
	Synthesized input EdgePhy [[I22_4, I12_3, True], [I22_4, R22, True], [R32_N5, R32, True], [R31_N7, R31, True], [R33_N8, R33, True], [R31_N3, R31, True], [I13_4, R13, True], [R33_N0, R33, True], [R33_N6, R33, True], [I23_1, R23, True], [I23_2, I22_1, True], [I23_2, R23, True], [I23_3, I33_4, True], [I23_3, R23, True], [R12, I12_4, True], [R12, I12_1, True], [R12, I12_2, True], [R12, I12_3, True], [R12, R12_N4, True], [R13, I13_4, True], [R13, I13_1, True], [R13, I13_3, True], [R13, I13_2, True], [R13, R13_N2, True], [R11, I11_1, True], [R11, I11_3, True], [R11, I11_2, True], [R11, I11_4, True], [I11_1, R11, True], [I11_1, I12_2, True], [I21_4, I11_3, True], [I21_4, R21, True], [I21_2, R21, True], [I21_3, I31_4, True], [I21_3, R21, True], [I21_1, I22_2, True], [I21_1, R21, True], [I22_1, I23_2, True], [I22_1, R22, True], [I22_3, I32_4, True], [I22_3, R22, True], [I22_2, I21_1, True], [I22_2, R22, True], [R31, R31_N7, True], [R31, R31_N3, True], [R31, I31_4, True], [R31, I31_1, True], [R31, I31_3, True], [R31, I31_2, True], [R32, R32_N5, True], [R32, I32_4, True], [R32, I32_2, True], [R32, I32_3, True], [R32, I32_1, True], [R33, R33_N8, True], [R33, R33_N0, True], [R33, R33_N6, True], [R33, I33_4, True], [R33, I33_3, True], [R33, I33_2, True], [R33, I33_1, True], [I12_4, R12, True], [I12_1, R12, True], [I12_1, I13_2, True], [I12_2, R12, True], [I12_2, I11_1, True], [I12_3, I22_4, True], [I12_3, R12, True], [I33_4, I23_3, True], [I33_4, R33, True], [I33_3, R33, True], [I33_2, R33, True], [I33_2, I32_1, True], [I33_1, R33, True], [I31_4, I21_3, True], [I31_4, R31, True], [R22_N1, R22, True], [I23_4, I13_3, True], [I23_4, R23, True], [I13_1, R13, True], [I13_3, R13, True], [I13_3, I23_4, True], [I13_2, R13, True], [I13_2, I12_1, True], [I11_3, R11, True], [I11_3, I21_4, True], [I11_2, R11, True], [R12_N4, R12, True], [I11_4, R11, True], [R13_N2, R13, True], [I32_4, I22_3, True], [I32_4, R32, True], [I32_2, R32, True], [I32_2, I31_1, True], [I32_3, R32, True], [I32_1, R32, True], [I32_1, I33_2, True], [I31_1, R31, True], [I31_1, I32_2, True], [I31_3, R31, True], [I31_2, R31, True], [R23, I23_1, True], [R23, I23_2, True], [R23, I23_3, True], [R23, I23_4, True], [R22, I22_4, True], [R22, I22_1, True], [R22, I22_3, True], [R22, I22_2, True], [R22, R22_N1, True], [R21, I21_4, True], [R21, I21_2, True], [R21, I21_3, True], [R21, I21_1, True], 'False']
	Synthesized input Network [[R12_N4, True], [R13_N2, True], [R32_N5, True], [R31_N7, True], [R33_N8, True], [R22_N1, True], [R31_N3, True], [R33_N0, True], [R33_N6, True], 'False']
	Synthesized input SetOSPFEdgeCost [[I11_1, I12_2, 7, True], [I21_1, I22_2, 1, True], [I32_1, I33_2, 5, True], [I13_3, I23_4, 1, True], [I32_4, I22_3, 1, True], [I23_4, I13_3, 1, True], [I12_1, I13_2, 2, True], [I23_2, I22_1, 2, True], [I11_3, I21_4, 7, True], [I32_2, I31_1, 7, True], [I21_3, I31_4, 9, True], [I12_3, I22_4, 4, True], [I33_2, I32_1, 6, True], [I31_1, I32_2, 2, True], [I22_3, I32_4, 6, True], [I22_1, I23_2, 1, True], [I23_3, I33_4, 3, True], [I33_4, I23_3, 15, True], [I31_4, I21_3, 7, True], [I13_2, I12_1, 1, True], [I22_4, I12_3, 3, True], 'False']
Done!!!
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Final results...
For box ospf01
	Synthesized input ConnectedNodes [[R12, I12_3, I22_4, R22], [R12, I12_2, I11_1, R11], [R12, I12_1, I13_2, R13], [R23, I23_4, I13_3, R13], [R21, I21_4, I11_3, R11], [R21, I21_3, I31_4, R31], [R21, I21_1, I22_2, R22], [R22, I22_3, I32_4, R32], [R13, I13_2, I12_1, R12], [R33, I33_4, I23_3, R23], [R32, I32_2, I31_1, R31], [R11, I11_1, I12_2, R12], [R22, I22_4, I12_3, R12], [R32, I32_4, I22_3, R22], [R22, I22_1, I23_2, R23], [R31, I31_1, I32_2, R32], [R31, I31_4, I21_3, R21], [R33, I33_2, I32_1, R32], [R22, I22_2, I21_1, R21], [R32, I32_1, I33_2, R33], [R11, I11_3, I21_4, R21], [R23, I23_3, I33_4, R33], [R23, I23_2, I22_1, R22], [R13, I13_3, I23_4, R23], 'False']
	Synthesized input EdgePhy [[I22_4, I12_3], [I22_4, R22], [R32_N5, R32], [R31_N7, R31], [R33_N8, R33], [R31_N3, R31], [I13_4, R13], [R33_N0, R33], [R33_N6, R33], [I23_1, R23], [I23_2, I22_1], [I23_2, R23], [I23_3, I33_4], [I23_3, R23], [R12, I12_4], [R12, I12_1], [R12, I12_2], [R12, I12_3], [R12, R12_N4], [R13, I13_4], [R13, I13_1], [R13, I13_3], [R13, I13_2], [R13, R13_N2], [R11, I11_1], [R11, I11_3], [R11, I11_2], [R11, I11_4], [I11_1, R11], [I11_1, I12_2], [I21_4, I11_3], [I21_4, R21], [I21_2, R21], [I21_3, I31_4], [I21_3, R21], [I21_1, I22_2], [I21_1, R21], [I22_1, I23_2], [I22_1, R22], [I22_3, I32_4], [I22_3, R22], [I22_2, I21_1], [I22_2, R22], [R31, R31_N7], [R31, R31_N3], [R31, I31_4], [R31, I31_1], [R31, I31_3], [R31, I31_2], [R32, R32_N5], [R32, I32_4], [R32, I32_2], [R32, I32_3], [R32, I32_1], [R33, R33_N8], [R33, R33_N0], [R33, R33_N6], [R33, I33_4], [R33, I33_3], [R33, I33_2], [R33, I33_1], [I12_4, R12], [I12_1, R12], [I12_1, I13_2], [I12_2, R12], [I12_2, I11_1], [I12_3, I22_4], [I12_3, R12], [I33_4, I23_3], [I33_4, R33], [I33_3, R33], [I33_2, R33], [I33_2, I32_1], [I33_1, R33], [I31_4, I21_3], [I31_4, R31], [R22_N1, R22], [I23_4, I13_3], [I23_4, R23], [I13_1, R13], [I13_3, R13], [I13_3, I23_4], [I13_2, R13], [I13_2, I12_1], [I11_3, R11], [I11_3, I21_4], [I11_2, R11], [R12_N4, R12], [I11_4, R11], [R13_N2, R13], [I32_4, I22_3], [I32_4, R32], [I32_2, R32], [I32_2, I31_1], [I32_3, R32], [I32_1, R32], [I32_1, I33_2], [I31_1, R31], [I31_1, I32_2], [I31_3, R31], [I31_2, R31], [R23, I23_1], [R23, I23_2], [R23, I23_3], [R23, I23_4], [R22, I22_4], [R22, I22_1], [R22, I22_3], [R22, I22_2], [R22, R22_N1], [R21, I21_4], [R21, I21_2], [R21, I21_3], [R21, I21_1], 'False']
	Synthesized input Network [[R12_N4], [R13_N2], [R32_N5], [R31_N7], [R33_N8], [R22_N1], [R31_N3], [R33_N0], [R33_N6], 'False']
	Synthesized input SetOSPFEdgeCost [[I11_1, I12_2, 7], [I21_1, I22_2, 1], [I32_1, I33_2, 5], [I13_3, I23_4, 1], [I32_4, I22_3, 1], [I23_4, I13_3, 1], [I12_1, I13_2, 2], [I23_2, I22_1, 2], [I11_3, I21_4, 7], [I32_2, I31_1, 7], [I21_3, I31_4, 9], [I12_3, I22_4, 4], [I33_2, I32_1, 6], [I31_1, I32_2, 2], [I22_3, I32_4, 6], [I22_1, I23_2, 1], [I23_3, I33_4, 3], [I33_4, I23_3, 15], [I31_4, I21_3, 7], [I13_2, I12_1, 1], [I22_4, I12_3, 3], 'False']
	Synthesized output OSPFRoute_1 [[R13_N2, R12, R13, 2], [R32_N5, R12, R22, 10], [R31_N7, R12, R22, 17], [R33_N8, R12, R13, 6], [R22_N1, R12, R22, 4], [R31_N3, R12, R22, 17], [R33_N0, R12, R13, 6], [R33_N6, R12, R13, 6], [R12_N4, R13, R12, 1], [R32_N5, R13, R23, 9], [R31_N7, R13, R23, 16], [R33_N8, R13, R23, 4], [R22_N1, R13, R23, 3], [R31_N3, R13, R23, 16], [R33_N0, R13, R23, 4], [R33_N6, R13, R23, 4], [R12_N4, R11, R12, 7], [R13_N2, R11, R12, 9], [R32_N5, R11, R21, 14], [R31_N7, R11, R21, 16], [R33_N8, R11, R21, 12], [R22_N1, R11, R21, 8], [R31_N3, R11, R21, 16], [R33_N0, R11, R21, 12], [R33_N6, R11, R21, 12], [R12_N4, R31, R21, 11], [R13_N2, R31, R21, 13], [R32_N5, R31, R32, 2], [R33_N8, R31, R32, 7], [R22_N1, R31, R21, 8], [R33_N0, R31, R32, 7], [R33_N6, R31, R32, 7], [R12_N4, R32, R22, 4], [R13_N2, R32, R22, 6], [R31_N7, R32, R31, 7], [R33_N8, R32, R33, 5], [R22_N1, R32, R22, 1], [R31_N3, R32, R31, 7], [R33_N0, R32, R33, 5], [R33_N6, R32, R33, 5], [R12_N4, R33, R23, 17], [R13_N2, R33, R23, 16], [R32_N5, R33, R32, 6], [R31_N7, R33, R32, 13], [R22_N1, R33, R32, 7], [R31_N3, R33, R32, 13], [R12_N4, R23, R13, 2], [R13_N2, R23, R13, 1], [R32_N5, R23, R22, 8], [R31_N7, R23, R22, 15], [R33_N8, R23, R33, 3], [R22_N1, R23, R22, 2], [R31_N3, R23, R22, 15], [R33_N0, R23, R33, 3], [R12_N4, R22, R12, 3], [R13_N2, R22, R12, 5], [R32_N5, R22, R32, 6], [R31_N7, R22, R32, 13], [R33_N8, R22, R23, 4], [R31_N3, R22, R32, 13], [R33_N0, R22, R23, 4], [R12_N4, R21, R22, 4], [R13_N2, R21, R22, 6], [R32_N5, R21, R22, 7], [R31_N7, R21, R31, 9], [R33_N8, R21, R22, 5], [R22_N1, R21, R22, 1], [R31_N3, R21, R31, 9], [R33_N0, R21, R22, 5], [R33_N6, R23, R33, 3], [R33_N6, R22, R23, 4], [R33_N6, R21, R22, 5]]
	Synthesized output OSPFRoute []
For box ospf02-0
	Synthesized input OSPFRoute [[R13_N2, R12, R13, 2], [R32_N5, R12, R22, 10], [R31_N7, R12, R22, 17], [R33_N8, R12, R13, 6], [R22_N1, R12, R22, 4], [R31_N3, R12, R22, 17], [R33_N0, R12, R13, 6], [R33_N6, R12, R13, 6], [R12_N4, R13, R12, 1], [R32_N5, R13, R23, 9], [R31_N7, R13, R23, 16], [R33_N8, R13, R23, 4], [R22_N1, R13, R23, 3], [R31_N3, R13, R23, 16], [R33_N0, R13, R23, 4], [R33_N6, R13, R23, 4], [R12_N4, R11, R12, 7], [R13_N2, R11, R12, 9], [R32_N5, R11, R21, 14], [R31_N7, R11, R21, 16], [R33_N8, R11, R21, 12], [R22_N1, R11, R21, 8], [R31_N3, R11, R21, 16], [R33_N0, R11, R21, 12], [R33_N6, R11, R21, 12], [R12_N4, R31, R21, 11], [R13_N2, R31, R21, 13], [R32_N5, R31, R32, 2], [R33_N8, R31, R32, 7], [R22_N1, R31, R21, 8], [R33_N0, R31, R32, 7], [R33_N6, R31, R32, 7], [R12_N4, R32, R22, 4], [R13_N2, R32, R22, 6], [R31_N7, R32, R31, 7], [R33_N8, R32, R33, 5], [R22_N1, R32, R22, 1], [R31_N3, R32, R31, 7], [R33_N0, R32, R33, 5], [R33_N6, R32, R33, 5], [R12_N4, R33, R23, 17], [R13_N2, R33, R23, 16], [R32_N5, R33, R32, 6], [R31_N7, R33, R32, 13], [R22_N1, R33, R32, 7], [R31_N3, R33, R32, 13], [R12_N4, R23, R13, 2], [R13_N2, R23, R13, 1], [R32_N5, R23, R22, 8], [R31_N7, R23, R22, 15], [R33_N8, R23, R33, 3], [R22_N1, R23, R22, 2], [R31_N3, R23, R22, 15], [R33_N0, R23, R33, 3], [R12_N4, R22, R12, 3], [R13_N2, R22, R12, 5], [R32_N5, R22, R32, 6], [R31_N7, R22, R32, 13], [R33_N8, R22, R23, 4], [R31_N3, R22, R32, 13], [R33_N0, R22, R23, 4], [R12_N4, R21, R22, 4], [R13_N2, R21, R22, 6], [R32_N5, R21, R22, 7], [R31_N7, R21, R31, 9], [R33_N8, R21, R22, 5], [R22_N1, R21, R22, 1], [R31_N3, R21, R31, 9], [R33_N0, R21, R22, 5], [R33_N6, R23, R33, 3], [R33_N6, R22, R23, 4], [R33_N6, R21, R22, 5], 'False']
	Synthesized output nonMinOSPFRouteCost []
For box ospf02-1
	Synthesized input nonMinOSPFRouteCost ['False']
	Synthesized input OSPFRoute [[R13_N2, R12, R13, 2], [R32_N5, R12, R22, 10], [R31_N7, R12, R22, 17], [R33_N8, R12, R13, 6], [R22_N1, R12, R22, 4], [R31_N3, R12, R22, 17], [R33_N0, R12, R13, 6], [R33_N6, R12, R13, 6], [R12_N4, R13, R12, 1], [R32_N5, R13, R23, 9], [R31_N7, R13, R23, 16], [R33_N8, R13, R23, 4], [R22_N1, R13, R23, 3], [R31_N3, R13, R23, 16], [R33_N0, R13, R23, 4], [R33_N6, R13, R23, 4], [R12_N4, R11, R12, 7], [R13_N2, R11, R12, 9], [R32_N5, R11, R21, 14], [R31_N7, R11, R21, 16], [R33_N8, R11, R21, 12], [R22_N1, R11, R21, 8], [R31_N3, R11, R21, 16], [R33_N0, R11, R21, 12], [R33_N6, R11, R21, 12], [R12_N4, R31, R21, 11], [R13_N2, R31, R21, 13], [R32_N5, R31, R32, 2], [R33_N8, R31, R32, 7], [R22_N1, R31, R21, 8], [R33_N0, R31, R32, 7], [R33_N6, R31, R32, 7], [R12_N4, R32, R22, 4], [R13_N2, R32, R22, 6], [R31_N7, R32, R31, 7], [R33_N8, R32, R33, 5], [R22_N1, R32, R22, 1], [R31_N3, R32, R31, 7], [R33_N0, R32, R33, 5], [R33_N6, R32, R33, 5], [R12_N4, R33, R23, 17], [R13_N2, R33, R23, 16], [R32_N5, R33, R32, 6], [R31_N7, R33, R32, 13], [R22_N1, R33, R32, 7], [R31_N3, R33, R32, 13], [R12_N4, R23, R13, 2], [R13_N2, R23, R13, 1], [R32_N5, R23, R22, 8], [R31_N7, R23, R22, 15], [R33_N8, R23, R33, 3], [R22_N1, R23, R22, 2], [R31_N3, R23, R22, 15], [R33_N0, R23, R33, 3], [R12_N4, R22, R12, 3], [R13_N2, R22, R12, 5], [R32_N5, R22, R32, 6], [R31_N7, R22, R32, 13], [R33_N8, R22, R23, 4], [R31_N3, R22, R32, 13], [R33_N0, R22, R23, 4], [R12_N4, R21, R22, 4], [R13_N2, R21, R22, 6], [R32_N5, R21, R22, 7], [R31_N7, R21, R31, 9], [R33_N8, R21, R22, 5], [R22_N1, R21, R22, 1], [R31_N3, R21, R31, 9], [R33_N0, R21, R22, 5], [R33_N6, R23, R33, 3], [R33_N6, R22, R23, 4], [R33_N6, R21, R22, 5], 'False']
	Synthesized output minOSPFRouteCost [[R13_N2, R12, 2], [R32_N5, R12, 10], [R31_N7, R12, 17], [R33_N8, R12, 6], [R22_N1, R12, 4], [R31_N3, R12, 17], [R33_N0, R12, 6], [R33_N6, R12, 6], [R12_N4, R13, 1], [R32_N5, R13, 9], [R31_N7, R13, 16], [R33_N8, R13, 4], [R22_N1, R13, 3], [R31_N3, R13, 16], [R33_N0, R13, 4], [R33_N6, R13, 4], [R12_N4, R11, 7], [R13_N2, R11, 9], [R32_N5, R11, 14], [R31_N7, R11, 16], [R33_N8, R11, 12], [R22_N1, R11, 8], [R31_N3, R11, 16], [R33_N0, R11, 12], [R33_N6, R11, 12], [R12_N4, R31, 11], [R13_N2, R31, 13], [R32_N5, R31, 2], [R33_N8, R31, 7], [R22_N1, R31, 8], [R33_N0, R31, 7], [R33_N6, R31, 7], [R12_N4, R32, 4], [R13_N2, R32, 6], [R31_N7, R32, 7], [R33_N8, R32, 5], [R22_N1, R32, 1], [R31_N3, R32, 7], [R33_N0, R32, 5], [R33_N6, R32, 5], [R12_N4, R33, 17], [R13_N2, R33, 16], [R32_N5, R33, 6], [R31_N7, R33, 13], [R22_N1, R33, 7], [R31_N3, R33, 13], [R12_N4, R23, 2], [R13_N2, R23, 1], [R32_N5, R23, 8], [R31_N7, R23, 15], [R33_N8, R23, 3], [R22_N1, R23, 2], [R31_N3, R23, 15], [R33_N0, R23, 3], [R12_N4, R22, 3], [R13_N2, R22, 5], [R32_N5, R22, 6], [R31_N7, R22, 13], [R33_N8, R22, 4], [R31_N3, R22, 13], [R33_N0, R22, 4], [R12_N4, R21, 4], [R13_N2, R21, 6], [R32_N5, R21, 7], [R31_N7, R21, 9], [R33_N8, R21, 5], [R22_N1, R21, 1], [R31_N3, R21, 9], [R33_N0, R21, 5], [R33_N6, R23, 3], [R33_N6, R22, 4], [R33_N6, R21, 5]]
	Synthesized output BestOSPFRoute [[R13_N2, R12, R13, 2], [R32_N5, R12, R22, 10], [R31_N7, R12, R22, 17], [R33_N8, R12, R13, 6], [R22_N1, R12, R22, 4], [R31_N3, R12, R22, 17], [R33_N0, R12, R13, 6], [R33_N6, R12, R13, 6], [R12_N4, R13, R12, 1], [R32_N5, R13, R23, 9], [R31_N7, R13, R23, 16], [R33_N8, R13, R23, 4], [R22_N1, R13, R23, 3], [R31_N3, R13, R23, 16], [R33_N0, R13, R23, 4], [R33_N6, R13, R23, 4], [R12_N4, R11, R12, 7], [R13_N2, R11, R12, 9], [R32_N5, R11, R21, 14], [R31_N7, R11, R21, 16], [R33_N8, R11, R21, 12], [R22_N1, R11, R21, 8], [R31_N3, R11, R21, 16], [R33_N0, R11, R21, 12], [R33_N6, R11, R21, 12], [R12_N4, R31, R21, 11], [R13_N2, R31, R21, 13], [R32_N5, R31, R32, 2], [R33_N8, R31, R32, 7], [R22_N1, R31, R21, 8], [R33_N0, R31, R32, 7], [R33_N6, R31, R32, 7], [R12_N4, R32, R22, 4], [R13_N2, R32, R22, 6], [R31_N7, R32, R31, 7], [R33_N8, R32, R33, 5], [R22_N1, R32, R22, 1], [R31_N3, R32, R31, 7], [R33_N0, R32, R33, 5], [R33_N6, R32, R33, 5], [R12_N4, R33, R23, 17], [R13_N2, R33, R23, 16], [R32_N5, R33, R32, 6], [R31_N7, R33, R32, 13], [R22_N1, R33, R32, 7], [R31_N3, R33, R32, 13], [R12_N4, R23, R13, 2], [R13_N2, R23, R13, 1], [R32_N5, R23, R22, 8], [R31_N7, R23, R22, 15], [R33_N8, R23, R33, 3], [R22_N1, R23, R22, 2], [R31_N3, R23, R22, 15], [R33_N0, R23, R33, 3], [R12_N4, R22, R12, 3], [R13_N2, R22, R12, 5], [R32_N5, R22, R32, 6], [R31_N7, R22, R32, 13], [R33_N8, R22, R23, 4], [R31_N3, R22, R32, 13], [R33_N0, R22, R23, 4], [R12_N4, R21, R22, 4], [R13_N2, R21, R22, 6], [R32_N5, R21, R22, 7], [R31_N7, R21, R31, 9], [R33_N8, R21, R22, 5], [R22_N1, R21, R22, 1], [R31_N3, R21, R31, 9], [R33_N0, R21, R22, 5], [R33_N6, R23, R33, 3], [R33_N6, R22, R23, 4], [R33_N6, R21, R22, 5]]
For box fwd01-0
	Synthesized input MinIGPBGPRoute ['False']
	Synthesized input SetAdminDist [[R11, 0, 1], [R11, 2, 2], [R11, 1, 3], [R12, 0, 1], [R12, 2, 2], [R12, 1, 3], [R13, 0, 1], [R13, 2, 2], [R13, 1, 3], [R21, 0, 1], [R21, 2, 2], [R21, 1, 3], [R22, 0, 1], [R22, 2, 2], [R22, 1, 3], [R23, 0, 1], [R23, 2, 2], [R23, 1, 3], [R31, 0, 1], [R31, 2, 2], [R31, 1, 3], [R32, 0, 1], [R32, 2, 2], [R32, 1, 3], [R33, 0, 1], [R33, 2, 2], [R33, 1, 3], 'False']
	Synthesized input SetStaticRoute [[R33_N6, R23, R33], [R33_N6, R22, R23], [R33_N6, R21, R22], 'False']
	Synthesized input BestOSPFRoute [[R13_N2, R12, R13, 2], [R32_N5, R12, R22, 10], [R31_N7, R12, R22, 17], [R33_N8, R12, R13, 6], [R22_N1, R12, R22, 4], [R31_N3, R12, R22, 17], [R33_N0, R12, R13, 6], [R33_N6, R12, R13, 6], [R12_N4, R13, R12, 1], [R32_N5, R13, R23, 9], [R31_N7, R13, R23, 16], [R33_N8, R13, R23, 4], [R22_N1, R13, R23, 3], [R31_N3, R13, R23, 16], [R33_N0, R13, R23, 4], [R33_N6, R13, R23, 4], [R12_N4, R11, R12, 7], [R13_N2, R11, R12, 9], [R32_N5, R11, R21, 14], [R31_N7, R11, R21, 16], [R33_N8, R11, R21, 12], [R22_N1, R11, R21, 8], [R31_N3, R11, R21, 16], [R33_N0, R11, R21, 12], [R33_N6, R11, R21, 12], [R12_N4, R31, R21, 11], [R13_N2, R31, R21, 13], [R32_N5, R31, R32, 2], [R33_N8, R31, R32, 7], [R22_N1, R31, R21, 8], [R33_N0, R31, R32, 7], [R33_N6, R31, R32, 7], [R12_N4, R32, R22, 4], [R13_N2, R32, R22, 6], [R31_N7, R32, R31, 7], [R33_N8, R32, R33, 5], [R22_N1, R32, R22, 1], [R31_N3, R32, R31, 7], [R33_N0, R32, R33, 5], [R33_N6, R32, R33, 5], [R12_N4, R33, R23, 17], [R13_N2, R33, R23, 16], [R32_N5, R33, R32, 6], [R31_N7, R33, R32, 13], [R22_N1, R33, R32, 7], [R31_N3, R33, R32, 13], [R12_N4, R23, R13, 2], [R13_N2, R23, R13, 1], [R32_N5, R23, R22, 8], [R31_N7, R23, R22, 15], [R33_N8, R23, R33, 3], [R22_N1, R23, R22, 2], [R31_N3, R23, R22, 15], [R33_N0, R23, R33, 3], [R12_N4, R22, R12, 3], [R13_N2, R22, R12, 5], [R32_N5, R22, R32, 6], [R31_N7, R22, R32, 13], [R33_N8, R22, R23, 4], [R31_N3, R22, R32, 13], [R33_N0, R22, R23, 4], [R12_N4, R21, R22, 4], [R13_N2, R21, R22, 6], [R32_N5, R21, R22, 7], [R31_N7, R21, R31, 9], [R33_N8, R21, R22, 5], [R22_N1, R21, R22, 1], [R31_N3, R21, R31, 9], [R33_N0, R21, R22, 5], [R33_N6, R23, R33, 3], [R33_N6, R22, R23, 4], [R33_N6, R21, R22, 5], 'False']
	Synthesized output Route [[R13_N2, R12, R13, 1], [R32_N5, R12, R22, 1], [R31_N7, R12, R22, 1], [R33_N8, R12, R13, 1], [R22_N1, R12, R22, 1], [R31_N3, R12, R22, 1], [R33_N0, R12, R13, 1], [R33_N6, R12, R13, 1], [R12_N4, R13, R12, 1], [R32_N5, R13, R23, 1], [R31_N7, R13, R23, 1], [R33_N8, R13, R23, 1], [R22_N1, R13, R23, 1], [R31_N3, R13, R23, 1], [R33_N0, R13, R23, 1], [R33_N6, R13, R23, 1], [R12_N4, R11, R12, 1], [R13_N2, R11, R12, 1], [R32_N5, R11, R21, 1], [R31_N7, R11, R21, 1], [R33_N8, R11, R21, 1], [R22_N1, R11, R21, 1], [R31_N3, R11, R21, 1], [R33_N0, R11, R21, 1], [R33_N6, R11, R21, 1], [R12_N4, R31, R21, 1], [R13_N2, R31, R21, 1], [R32_N5, R31, R32, 1], [R33_N8, R31, R32, 1], [R22_N1, R31, R21, 1], [R33_N0, R31, R32, 1], [R33_N6, R31, R32, 1], [R12_N4, R32, R22, 1], [R13_N2, R32, R22, 1], [R31_N7, R32, R31, 1], [R33_N8, R32, R33, 1], [R22_N1, R32, R22, 1], [R31_N3, R32, R31, 1], [R33_N0, R32, R33, 1], [R33_N6, R32, R33, 1], [R12_N4, R33, R23, 1], [R13_N2, R33, R23, 1], [R32_N5, R33, R32, 1], [R31_N7, R33, R32, 1], [R22_N1, R33, R32, 1], [R31_N3, R33, R32, 1], [R12_N4, R23, R13, 1], [R13_N2, R23, R13, 1], [R32_N5, R23, R22, 1], [R31_N7, R23, R22, 1], [R33_N8, R23, R33, 1], [R22_N1, R23, R22, 1], [R31_N3, R23, R22, 1], [R33_N0, R23, R33, 1], [R33_N6, R23, R33, 0], [R12_N4, R22, R12, 1], [R13_N2, R22, R12, 1], [R32_N5, R22, R32, 1], [R31_N7, R22, R32, 1], [R33_N8, R22, R23, 1], [R31_N3, R22, R32, 1], [R33_N0, R22, R23, 1], [R33_N6, R22, R23, 0], [R12_N4, R21, R22, 1], [R13_N2, R21, R22, 1], [R32_N5, R21, R22, 1], [R31_N7, R21, R31, 1], [R33_N8, R21, R22, 1], [R22_N1, R21, R22, 1], [R31_N3, R21, R31, 1], [R33_N0, R21, R22, 1], [R33_N6, R21, R22, 0], [R33_N6, R23, R33, 1], [R33_N6, R22, R23, 1], [R33_N6, R21, R22, 1]]
	Synthesized output nonMinCostAD [[R33_N6, R21, 3], [R33_N6, R23, 3], [R33_N6, R22, 3], [R33_N6, R23, 2], [R33_N6, R22, 2], [R33_N6, R21, 2]]
	Synthesized output BestBGPRoute []
For box fwd01-1
	Synthesized input SetAdminDist [[R11, 0, 1], [R11, 2, 2], [R11, 1, 3], [R12, 0, 1], [R12, 2, 2], [R12, 1, 3], [R13, 0, 1], [R13, 2, 2], [R13, 1, 3], [R21, 0, 1], [R21, 2, 2], [R21, 1, 3], [R22, 0, 1], [R22, 2, 2], [R22, 1, 3], [R23, 0, 1], [R23, 2, 2], [R23, 1, 3], [R31, 0, 1], [R31, 2, 2], [R31, 1, 3], [R32, 0, 1], [R32, 2, 2], [R32, 1, 3], [R33, 0, 1], [R33, 2, 2], [R33, 1, 3], 'False']
	Synthesized input Route [[R13_N2, R12, R13, 1], [R32_N5, R12, R22, 1], [R31_N7, R12, R22, 1], [R33_N8, R12, R13, 1], [R22_N1, R12, R22, 1], [R31_N3, R12, R22, 1], [R33_N0, R12, R13, 1], [R33_N6, R12, R13, 1], [R12_N4, R13, R12, 1], [R32_N5, R13, R23, 1], [R31_N7, R13, R23, 1], [R33_N8, R13, R23, 1], [R22_N1, R13, R23, 1], [R31_N3, R13, R23, 1], [R33_N0, R13, R23, 1], [R33_N6, R13, R23, 1], [R12_N4, R11, R12, 1], [R13_N2, R11, R12, 1], [R32_N5, R11, R21, 1], [R31_N7, R11, R21, 1], [R33_N8, R11, R21, 1], [R22_N1, R11, R21, 1], [R31_N3, R11, R21, 1], [R33_N0, R11, R21, 1], [R33_N6, R11, R21, 1], [R12_N4, R31, R21, 1], [R13_N2, R31, R21, 1], [R32_N5, R31, R32, 1], [R33_N8, R31, R32, 1], [R22_N1, R31, R21, 1], [R33_N0, R31, R32, 1], [R33_N6, R31, R32, 1], [R12_N4, R32, R22, 1], [R13_N2, R32, R22, 1], [R31_N7, R32, R31, 1], [R33_N8, R32, R33, 1], [R22_N1, R32, R22, 1], [R31_N3, R32, R31, 1], [R33_N0, R32, R33, 1], [R33_N6, R32, R33, 1], [R12_N4, R33, R23, 1], [R13_N2, R33, R23, 1], [R32_N5, R33, R32, 1], [R31_N7, R33, R32, 1], [R22_N1, R33, R32, 1], [R31_N3, R33, R32, 1], [R12_N4, R23, R13, 1], [R13_N2, R23, R13, 1], [R32_N5, R23, R22, 1], [R31_N7, R23, R22, 1], [R33_N8, R23, R33, 1], [R22_N1, R23, R22, 1], [R31_N3, R23, R22, 1], [R33_N0, R23, R33, 1], [R33_N6, R23, R33, 0], [R12_N4, R22, R12, 1], [R13_N2, R22, R12, 1], [R32_N5, R22, R32, 1], [R31_N7, R22, R32, 1], [R33_N8, R22, R23, 1], [R31_N3, R22, R32, 1], [R33_N0, R22, R23, 1], [R33_N6, R22, R23, 0], [R12_N4, R21, R22, 1], [R13_N2, R21, R22, 1], [R32_N5, R21, R22, 1], [R31_N7, R21, R31, 1], [R33_N8, R21, R22, 1], [R22_N1, R21, R22, 1], [R31_N3, R21, R31, 1], [R33_N0, R21, R22, 1], [R33_N6, R21, R22, 0], [R33_N6, R23, R33, 1], [R33_N6, R22, R23, 1], [R33_N6, R21, R22, 1], 'False']
	Synthesized input nonMinCostAD [[R33_N6, R21, 3], [R33_N6, R23, 3], [R33_N6, R22, 3], [R33_N6, R23, 2], [R33_N6, R22, 2], [R33_N6, R21, 2], 'False']
	Synthesized output Fwd [[R13_N2, R12, R13, 1], [R32_N5, R12, R22, 1], [R31_N7, R12, R22, 1], [R33_N8, R12, R13, 1], [R22_N1, R12, R22, 1], [R31_N3, R12, R22, 1], [R33_N0, R12, R13, 1], [R33_N6, R12, R13, 1], [R12_N4, R13, R12, 1], [R32_N5, R13, R23, 1], [R31_N7, R13, R23, 1], [R33_N8, R13, R23, 1], [R22_N1, R13, R23, 1], [R31_N3, R13, R23, 1], [R33_N0, R13, R23, 1], [R33_N6, R13, R23, 1], [R12_N4, R11, R12, 1], [R13_N2, R11, R12, 1], [R32_N5, R11, R21, 1], [R31_N7, R11, R21, 1], [R33_N8, R11, R21, 1], [R22_N1, R11, R21, 1], [R31_N3, R11, R21, 1], [R33_N0, R11, R21, 1], [R33_N6, R11, R21, 1], [R12_N4, R31, R21, 1], [R13_N2, R31, R21, 1], [R32_N5, R31, R32, 1], [R33_N8, R31, R32, 1], [R22_N1, R31, R21, 1], [R33_N0, R31, R32, 1], [R33_N6, R31, R32, 1], [R12_N4, R32, R22, 1], [R13_N2, R32, R22, 1], [R31_N7, R32, R31, 1], [R33_N8, R32, R33, 1], [R22_N1, R32, R22, 1], [R31_N3, R32, R31, 1], [R33_N0, R32, R33, 1], [R33_N6, R32, R33, 1], [R12_N4, R33, R23, 1], [R13_N2, R33, R23, 1], [R32_N5, R33, R32, 1], [R31_N7, R33, R32, 1], [R22_N1, R33, R32, 1], [R31_N3, R33, R32, 1], [R12_N4, R23, R13, 1], [R13_N2, R23, R13, 1], [R32_N5, R23, R22, 1], [R31_N7, R23, R22, 1], [R33_N8, R23, R33, 1], [R22_N1, R23, R22, 1], [R31_N3, R23, R22, 1], [R33_N0, R23, R33, 1], [R33_N6, R23, R33, 0], [R12_N4, R22, R12, 1], [R13_N2, R22, R12, 1], [R32_N5, R22, R32, 1], [R31_N7, R22, R32, 1], [R33_N8, R22, R23, 1], [R31_N3, R22, R32, 1], [R33_N0, R22, R23, 1], [R33_N6, R22, R23, 0], [R12_N4, R21, R22, 1], [R13_N2, R21, R22, 1], [R32_N5, R21, R22, 1], [R31_N7, R21, R31, 1], [R33_N8, R21, R22, 1], [R22_N1, R21, R22, 1], [R31_N3, R21, R31, 1], [R33_N0, R21, R22, 1], [R33_N6, R21, R22, 0]]
Synthesis time: 53
