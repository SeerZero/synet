
// ----------------------------- TYPES ----------------------------- //

Node(n) -> string(n).
Network(n) -> string(n).

// EDB: nonMaxBGPLocalPref, BGPLocalPref, BGPRoute, SetNetwork
nonMaxBGPLocalPref(prefix, pref) -> Network(prefix), int(pref).

BGPLocalPref(node, next_hop, prefix, pref) ->
    Node(node), Network(next_hop), Network(prefix), int(pref).

BGPRoute(node, next_hop, prefix, ASPath, ASPathLength, pref) ->
    Node(node), Network(next_hop), Network(prefix), string(ASPath),
    int(ASPathLength), int(pref).

SetNetwork(node, network) -> Node(node), Network(network).

// IDB: MaxBGPLocalPrefBGPRoute, ConnectedBGPAnnouncement
MaxBGPLocalPrefBGPRoute(node, next_hop, prefix, ASPath, ASPathLength, pref) ->
    Node(node), Network(next_hop), Network(prefix), string(ASPath),
    int(ASPathLength), int(pref).

ConnectedBGPAnnouncement(node, next_hop, prefix) -> Node(node), Network(next_hop), Network(prefix).

// ------------------------------ IBGP 4/9 ------------------------------//

// Step 2
MaxBGPLocalPrefBGPRoute(node, next_hop, prefix, ASPath, ASPathLength, pref) <-
    BGPLocalPref(_, next_hop, prefix, pref),
    !nonMaxBGPLocalPref(prefix, pref),
    BGPRoute(node, next_hop, prefix, ASPath, ASPathLength, pref).

ConnectedBGPAnnouncement(node, next_hop, prefix) <-
    MaxBGPLocalPrefBGPRoute(node, next_hop, prefix, _, _, _),
    SetNetwork(node, next_hop).

// ------------------------------ THE END ------------------------------//
