



// ----------------------------- TYPES ----------------------------- //

// Generic Vertex type
Node(n) -> string(n).
Network(n) -> string(n).


// EDB: BestOSPFRoute, SetStaticRoute, SetAdminDist
BestOSPFRoute(net, node, nxt, cost) -> Network(net), Node(node), Node(nxt), int(cost).
SetStaticRoute(net, node, nxt) -> Network(net), Node(node), Node(nxt).
SetAdminDist(node, protocol, cost) -> Node(node), string(protocol), int(cost).
MinIGPBGPRoute(node, next_hop, prefix, ASPath, ASPathLength, pref) ->
    Node(node), Network(next_hop), Network(prefix), string(ASPath),
    int(ASPathLength), int(pref).

// IDB: Route, nonMinCostAD, Fwd
BestBGPRoute(network, src, next) -> Network(network), Node(src), Node(next).
nonMinCostAD(network, node, cost) -> Network(network), Node(node), int(cost).
Route(net, node, nxt, protocol) -> Network(net), Node(node), Node(nxt), string(protocol).

// ------------------------------ FWD 1/3 ------------------------------//

// This can move to Fwd module
BestBGPRoute(network, src, next) <-
    MinIGPBGPRoute(src, next_hop, network, _, _, _),
    BestOSPFRoute(next_hop, src, next, _).

//BestBGPRoute(network, src, next) <-
//    MinIGPBGPRoute(src, next_hop, network, _, _, _),
//    SetStaticRoute(next_hop, src, next).

Route(net, node, nxt, protocol) <-
   BestBGPRoute(net, node, nxt),
   protocol="STRING:bgp".

Route(net, node, nxt, protocol) <-
    BestOSPFRoute(net, node, nxt, _),
    protocol="STRING:ospf".

Route(net, node, nxt, protocol) <-
    SetStaticRoute(net, node, nxt),
    protocol="STRING:static".

// Computation
nonMinCostAD(network, node, cost) <-
    SetAdminDist(node, _, cost),
    Route(network, node, _, protocol),
    SetAdminDist(node, protocol, smallerCost),
    smallerCost < cost.

// ------------------------------ THE END ------------------------------//
